// Code generated by go-swagger; DO NOT EDIT.

package public_services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	api_models "github.com/BlueRainSoftware/id4i-cli/api_models"
)

// GETRoutesReader is a Reader for the GETRoutes structure.
type GETRoutesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GETRoutesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGETRoutesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewGETRoutesAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGETRoutesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGETRoutesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGETRoutesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewGETRoutesMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 406:
		result := NewGETRoutesNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGETRoutesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGETRoutesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGETRoutesOK creates a GETRoutesOK with default headers values
func NewGETRoutesOK() *GETRoutesOK {
	return &GETRoutesOK{}
}

/*GETRoutesOK handles this case with default header values.

OK
*/
type GETRoutesOK struct {
	Payload []*api_models.Route
}

func (o *GETRoutesOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/public/routes/{id4n}][%d] getRoutesOK  %+v", 200, o.Payload)
}

func (o *GETRoutesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETRoutesAccepted creates a GETRoutesAccepted with default headers values
func NewGETRoutesAccepted() *GETRoutesAccepted {
	return &GETRoutesAccepted{}
}

/*GETRoutesAccepted handles this case with default header values.

Accepted
*/
type GETRoutesAccepted struct {
}

func (o *GETRoutesAccepted) Error() string {
	return fmt.Sprintf("[GET /api/v1/public/routes/{id4n}][%d] getRoutesAccepted ", 202)
}

func (o *GETRoutesAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGETRoutesUnauthorized creates a GETRoutesUnauthorized with default headers values
func NewGETRoutesUnauthorized() *GETRoutesUnauthorized {
	return &GETRoutesUnauthorized{}
}

/*GETRoutesUnauthorized handles this case with default header values.

Unauthorized
*/
type GETRoutesUnauthorized struct {
	Payload *api_models.APIError
}

func (o *GETRoutesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/public/routes/{id4n}][%d] getRoutesUnauthorized  %+v", 401, o.Payload)
}

func (o *GETRoutesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETRoutesForbidden creates a GETRoutesForbidden with default headers values
func NewGETRoutesForbidden() *GETRoutesForbidden {
	return &GETRoutesForbidden{}
}

/*GETRoutesForbidden handles this case with default header values.

Forbidden
*/
type GETRoutesForbidden struct {
	Payload *api_models.APIError
}

func (o *GETRoutesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/public/routes/{id4n}][%d] getRoutesForbidden  %+v", 403, o.Payload)
}

func (o *GETRoutesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETRoutesNotFound creates a GETRoutesNotFound with default headers values
func NewGETRoutesNotFound() *GETRoutesNotFound {
	return &GETRoutesNotFound{}
}

/*GETRoutesNotFound handles this case with default header values.

Not Found
*/
type GETRoutesNotFound struct {
	Payload *api_models.APIError
}

func (o *GETRoutesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/public/routes/{id4n}][%d] getRoutesNotFound  %+v", 404, o.Payload)
}

func (o *GETRoutesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETRoutesMethodNotAllowed creates a GETRoutesMethodNotAllowed with default headers values
func NewGETRoutesMethodNotAllowed() *GETRoutesMethodNotAllowed {
	return &GETRoutesMethodNotAllowed{}
}

/*GETRoutesMethodNotAllowed handles this case with default header values.

Method not allowed
*/
type GETRoutesMethodNotAllowed struct {
	Payload *api_models.APIError
}

func (o *GETRoutesMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/v1/public/routes/{id4n}][%d] getRoutesMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *GETRoutesMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETRoutesNotAcceptable creates a GETRoutesNotAcceptable with default headers values
func NewGETRoutesNotAcceptable() *GETRoutesNotAcceptable {
	return &GETRoutesNotAcceptable{}
}

/*GETRoutesNotAcceptable handles this case with default header values.

Not Acceptable
*/
type GETRoutesNotAcceptable struct {
	Payload *api_models.APIError
}

func (o *GETRoutesNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /api/v1/public/routes/{id4n}][%d] getRoutesNotAcceptable  %+v", 406, o.Payload)
}

func (o *GETRoutesNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETRoutesUnsupportedMediaType creates a GETRoutesUnsupportedMediaType with default headers values
func NewGETRoutesUnsupportedMediaType() *GETRoutesUnsupportedMediaType {
	return &GETRoutesUnsupportedMediaType{}
}

/*GETRoutesUnsupportedMediaType handles this case with default header values.

Unsupported Media Type
*/
type GETRoutesUnsupportedMediaType struct {
	Payload *api_models.APIError
}

func (o *GETRoutesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v1/public/routes/{id4n}][%d] getRoutesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GETRoutesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETRoutesInternalServerError creates a GETRoutesInternalServerError with default headers values
func NewGETRoutesInternalServerError() *GETRoutesInternalServerError {
	return &GETRoutesInternalServerError{}
}

/*GETRoutesInternalServerError handles this case with default header values.

Internal Server Error
*/
type GETRoutesInternalServerError struct {
	Payload *api_models.APIError
}

func (o *GETRoutesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/public/routes/{id4n}][%d] getRoutesInternalServerError  %+v", 500, o.Payload)
}

func (o *GETRoutesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
