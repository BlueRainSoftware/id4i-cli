// Code generated by go-swagger; DO NOT EDIT.

package collections

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteCollectionParams creates a new DeleteCollectionParams object
// with the default values initialized.
func NewDeleteCollectionParams() *DeleteCollectionParams {
	var ()
	return &DeleteCollectionParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteCollectionParamsWithTimeout creates a new DeleteCollectionParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteCollectionParamsWithTimeout(timeout time.Duration) *DeleteCollectionParams {
	var ()
	return &DeleteCollectionParams{

		timeout: timeout,
	}
}

// NewDeleteCollectionParamsWithContext creates a new DeleteCollectionParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteCollectionParamsWithContext(ctx context.Context) *DeleteCollectionParams {
	var ()
	return &DeleteCollectionParams{

		Context: ctx,
	}
}

// NewDeleteCollectionParamsWithHTTPClient creates a new DeleteCollectionParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteCollectionParamsWithHTTPClient(client *http.Client) *DeleteCollectionParams {
	var ()
	return &DeleteCollectionParams{
		HTTPClient: client,
	}
}

/*DeleteCollectionParams contains all the parameters to send to the API endpoint
for the delete collection operation typically these are written to a http.Request
*/
type DeleteCollectionParams struct {

	/*ID4N
	  id4n

	*/
	ID4N string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete collection params
func (o *DeleteCollectionParams) WithTimeout(timeout time.Duration) *DeleteCollectionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete collection params
func (o *DeleteCollectionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete collection params
func (o *DeleteCollectionParams) WithContext(ctx context.Context) *DeleteCollectionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete collection params
func (o *DeleteCollectionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete collection params
func (o *DeleteCollectionParams) WithHTTPClient(client *http.Client) *DeleteCollectionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete collection params
func (o *DeleteCollectionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID4N adds the id4n to the delete collection params
func (o *DeleteCollectionParams) WithID4N(id4n string) *DeleteCollectionParams {
	o.SetID4N(id4n)
	return o
}

// SetID4N adds the id4n to the delete collection params
func (o *DeleteCollectionParams) SetID4N(id4n string) {
	o.ID4N = id4n
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteCollectionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id4n
	if err := r.SetPathParam("id4n", o.ID4N); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
