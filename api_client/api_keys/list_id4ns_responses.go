// Code generated by go-swagger; DO NOT EDIT.

package api_keys

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	api_models "github.com/BlueRainSoftware/id4i-cli/api_models"
)

// ListId4nsReader is a Reader for the ListId4ns structure.
type ListId4nsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListId4nsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListId4nsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewListId4nsAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewListId4nsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListId4nsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListId4nsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewListId4nsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 406:
		result := NewListId4nsNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewListId4nsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListId4nsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListId4nsOK creates a ListId4nsOK with default headers values
func NewListId4nsOK() *ListId4nsOK {
	return &ListId4nsOK{}
}

/*ListId4nsOK handles this case with default header values.

OK
*/
type ListId4nsOK struct {
	Payload *api_models.ID4NPresentationPaginatedResponse
}

func (o *ListId4nsOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/apikeys/{key}/privileges/{privilege}/id4ns][%d] listId4nsOK  %+v", 200, o.Payload)
}

func (o *ListId4nsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.ID4NPresentationPaginatedResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListId4nsAccepted creates a ListId4nsAccepted with default headers values
func NewListId4nsAccepted() *ListId4nsAccepted {
	return &ListId4nsAccepted{}
}

/*ListId4nsAccepted handles this case with default header values.

Accepted
*/
type ListId4nsAccepted struct {
}

func (o *ListId4nsAccepted) Error() string {
	return fmt.Sprintf("[GET /api/v1/apikeys/{key}/privileges/{privilege}/id4ns][%d] listId4nsAccepted ", 202)
}

func (o *ListId4nsAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListId4nsUnauthorized creates a ListId4nsUnauthorized with default headers values
func NewListId4nsUnauthorized() *ListId4nsUnauthorized {
	return &ListId4nsUnauthorized{}
}

/*ListId4nsUnauthorized handles this case with default header values.

Unauthorized
*/
type ListId4nsUnauthorized struct {
	Payload *api_models.APIError
}

func (o *ListId4nsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/apikeys/{key}/privileges/{privilege}/id4ns][%d] listId4nsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListId4nsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListId4nsForbidden creates a ListId4nsForbidden with default headers values
func NewListId4nsForbidden() *ListId4nsForbidden {
	return &ListId4nsForbidden{}
}

/*ListId4nsForbidden handles this case with default header values.

Forbidden
*/
type ListId4nsForbidden struct {
	Payload *api_models.APIError
}

func (o *ListId4nsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/apikeys/{key}/privileges/{privilege}/id4ns][%d] listId4nsForbidden  %+v", 403, o.Payload)
}

func (o *ListId4nsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListId4nsNotFound creates a ListId4nsNotFound with default headers values
func NewListId4nsNotFound() *ListId4nsNotFound {
	return &ListId4nsNotFound{}
}

/*ListId4nsNotFound handles this case with default header values.

Not Found
*/
type ListId4nsNotFound struct {
	Payload *api_models.APIError
}

func (o *ListId4nsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/apikeys/{key}/privileges/{privilege}/id4ns][%d] listId4nsNotFound  %+v", 404, o.Payload)
}

func (o *ListId4nsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListId4nsMethodNotAllowed creates a ListId4nsMethodNotAllowed with default headers values
func NewListId4nsMethodNotAllowed() *ListId4nsMethodNotAllowed {
	return &ListId4nsMethodNotAllowed{}
}

/*ListId4nsMethodNotAllowed handles this case with default header values.

Method not allowed
*/
type ListId4nsMethodNotAllowed struct {
	Payload *api_models.APIError
}

func (o *ListId4nsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/v1/apikeys/{key}/privileges/{privilege}/id4ns][%d] listId4nsMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *ListId4nsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListId4nsNotAcceptable creates a ListId4nsNotAcceptable with default headers values
func NewListId4nsNotAcceptable() *ListId4nsNotAcceptable {
	return &ListId4nsNotAcceptable{}
}

/*ListId4nsNotAcceptable handles this case with default header values.

Not Acceptable
*/
type ListId4nsNotAcceptable struct {
	Payload *api_models.APIError
}

func (o *ListId4nsNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /api/v1/apikeys/{key}/privileges/{privilege}/id4ns][%d] listId4nsNotAcceptable  %+v", 406, o.Payload)
}

func (o *ListId4nsNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListId4nsUnsupportedMediaType creates a ListId4nsUnsupportedMediaType with default headers values
func NewListId4nsUnsupportedMediaType() *ListId4nsUnsupportedMediaType {
	return &ListId4nsUnsupportedMediaType{}
}

/*ListId4nsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type
*/
type ListId4nsUnsupportedMediaType struct {
	Payload *api_models.APIError
}

func (o *ListId4nsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v1/apikeys/{key}/privileges/{privilege}/id4ns][%d] listId4nsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *ListId4nsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListId4nsInternalServerError creates a ListId4nsInternalServerError with default headers values
func NewListId4nsInternalServerError() *ListId4nsInternalServerError {
	return &ListId4nsInternalServerError{}
}

/*ListId4nsInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListId4nsInternalServerError struct {
	Payload *api_models.APIError
}

func (o *ListId4nsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/apikeys/{key}/privileges/{privilege}/id4ns][%d] listId4nsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListId4nsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
