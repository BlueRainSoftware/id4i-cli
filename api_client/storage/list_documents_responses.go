// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	api_models "github.com/BlueRainSoftware/id4i-cli/api_models"
)

// ListDocumentsReader is a Reader for the ListDocuments structure.
type ListDocumentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListDocumentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListDocumentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewListDocumentsAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewListDocumentsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListDocumentsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListDocumentsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewListDocumentsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 406:
		result := NewListDocumentsNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewListDocumentsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListDocumentsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListDocumentsOK creates a ListDocumentsOK with default headers values
func NewListDocumentsOK() *ListDocumentsOK {
	return &ListDocumentsOK{}
}

/*ListDocumentsOK handles this case with default header values.

OK
*/
type ListDocumentsOK struct {
	Payload *api_models.PaginatedResponseOfDocument
}

func (o *ListDocumentsOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/documents/{id4n}/{organizationId}][%d] listDocumentsOK  %+v", 200, o.Payload)
}

func (o *ListDocumentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.PaginatedResponseOfDocument)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDocumentsAccepted creates a ListDocumentsAccepted with default headers values
func NewListDocumentsAccepted() *ListDocumentsAccepted {
	return &ListDocumentsAccepted{}
}

/*ListDocumentsAccepted handles this case with default header values.

Accepted
*/
type ListDocumentsAccepted struct {
}

func (o *ListDocumentsAccepted) Error() string {
	return fmt.Sprintf("[GET /api/v1/documents/{id4n}/{organizationId}][%d] listDocumentsAccepted ", 202)
}

func (o *ListDocumentsAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListDocumentsUnauthorized creates a ListDocumentsUnauthorized with default headers values
func NewListDocumentsUnauthorized() *ListDocumentsUnauthorized {
	return &ListDocumentsUnauthorized{}
}

/*ListDocumentsUnauthorized handles this case with default header values.

Unauthorized
*/
type ListDocumentsUnauthorized struct {
	Payload *api_models.APIError
}

func (o *ListDocumentsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/documents/{id4n}/{organizationId}][%d] listDocumentsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListDocumentsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDocumentsForbidden creates a ListDocumentsForbidden with default headers values
func NewListDocumentsForbidden() *ListDocumentsForbidden {
	return &ListDocumentsForbidden{}
}

/*ListDocumentsForbidden handles this case with default header values.

Forbidden
*/
type ListDocumentsForbidden struct {
	Payload *api_models.APIError
}

func (o *ListDocumentsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/documents/{id4n}/{organizationId}][%d] listDocumentsForbidden  %+v", 403, o.Payload)
}

func (o *ListDocumentsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDocumentsNotFound creates a ListDocumentsNotFound with default headers values
func NewListDocumentsNotFound() *ListDocumentsNotFound {
	return &ListDocumentsNotFound{}
}

/*ListDocumentsNotFound handles this case with default header values.

Not Found
*/
type ListDocumentsNotFound struct {
	Payload *api_models.APIError
}

func (o *ListDocumentsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/documents/{id4n}/{organizationId}][%d] listDocumentsNotFound  %+v", 404, o.Payload)
}

func (o *ListDocumentsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDocumentsMethodNotAllowed creates a ListDocumentsMethodNotAllowed with default headers values
func NewListDocumentsMethodNotAllowed() *ListDocumentsMethodNotAllowed {
	return &ListDocumentsMethodNotAllowed{}
}

/*ListDocumentsMethodNotAllowed handles this case with default header values.

Method not allowed
*/
type ListDocumentsMethodNotAllowed struct {
	Payload *api_models.APIError
}

func (o *ListDocumentsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/v1/documents/{id4n}/{organizationId}][%d] listDocumentsMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *ListDocumentsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDocumentsNotAcceptable creates a ListDocumentsNotAcceptable with default headers values
func NewListDocumentsNotAcceptable() *ListDocumentsNotAcceptable {
	return &ListDocumentsNotAcceptable{}
}

/*ListDocumentsNotAcceptable handles this case with default header values.

Not Acceptable
*/
type ListDocumentsNotAcceptable struct {
	Payload *api_models.APIError
}

func (o *ListDocumentsNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /api/v1/documents/{id4n}/{organizationId}][%d] listDocumentsNotAcceptable  %+v", 406, o.Payload)
}

func (o *ListDocumentsNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDocumentsUnsupportedMediaType creates a ListDocumentsUnsupportedMediaType with default headers values
func NewListDocumentsUnsupportedMediaType() *ListDocumentsUnsupportedMediaType {
	return &ListDocumentsUnsupportedMediaType{}
}

/*ListDocumentsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type
*/
type ListDocumentsUnsupportedMediaType struct {
	Payload *api_models.APIError
}

func (o *ListDocumentsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v1/documents/{id4n}/{organizationId}][%d] listDocumentsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *ListDocumentsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDocumentsInternalServerError creates a ListDocumentsInternalServerError with default headers values
func NewListDocumentsInternalServerError() *ListDocumentsInternalServerError {
	return &ListDocumentsInternalServerError{}
}

/*ListDocumentsInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListDocumentsInternalServerError struct {
	Payload *api_models.APIError
}

func (o *ListDocumentsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/documents/{id4n}/{organizationId}][%d] listDocumentsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListDocumentsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
