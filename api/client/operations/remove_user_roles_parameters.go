// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	api_models "github.com/BlueRainSoftware/id4i-cli/api/models"
)

// NewRemoveUserRolesParams creates a new RemoveUserRolesParams object
// with the default values initialized.
func NewRemoveUserRolesParams() *RemoveUserRolesParams {
	var ()
	return &RemoveUserRolesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewRemoveUserRolesParamsWithTimeout creates a new RemoveUserRolesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewRemoveUserRolesParamsWithTimeout(timeout time.Duration) *RemoveUserRolesParams {
	var ()
	return &RemoveUserRolesParams{

		timeout: timeout,
	}
}

// NewRemoveUserRolesParamsWithContext creates a new RemoveUserRolesParams object
// with the default values initialized, and the ability to set a context for a request
func NewRemoveUserRolesParamsWithContext(ctx context.Context) *RemoveUserRolesParams {
	var ()
	return &RemoveUserRolesParams{

		Context: ctx,
	}
}

// NewRemoveUserRolesParamsWithHTTPClient creates a new RemoveUserRolesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewRemoveUserRolesParamsWithHTTPClient(client *http.Client) *RemoveUserRolesParams {
	var ()
	return &RemoveUserRolesParams{
		HTTPClient: client,
	}
}

/*RemoveUserRolesParams contains all the parameters to send to the API endpoint
for the remove user roles operation typically these are written to a http.Request
*/
type RemoveUserRolesParams struct {

	/*ChangeRoleRequest
	  changeRoleRequest

	*/
	ChangeRoleRequest *api_models.ChangeRoleRequest
	/*OrganizationID
	  The namespace of the organization

	*/
	OrganizationID string
	/*Username
	  username

	*/
	Username string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the remove user roles params
func (o *RemoveUserRolesParams) WithTimeout(timeout time.Duration) *RemoveUserRolesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the remove user roles params
func (o *RemoveUserRolesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the remove user roles params
func (o *RemoveUserRolesParams) WithContext(ctx context.Context) *RemoveUserRolesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the remove user roles params
func (o *RemoveUserRolesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the remove user roles params
func (o *RemoveUserRolesParams) WithHTTPClient(client *http.Client) *RemoveUserRolesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the remove user roles params
func (o *RemoveUserRolesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithChangeRoleRequest adds the changeRoleRequest to the remove user roles params
func (o *RemoveUserRolesParams) WithChangeRoleRequest(changeRoleRequest *api_models.ChangeRoleRequest) *RemoveUserRolesParams {
	o.SetChangeRoleRequest(changeRoleRequest)
	return o
}

// SetChangeRoleRequest adds the changeRoleRequest to the remove user roles params
func (o *RemoveUserRolesParams) SetChangeRoleRequest(changeRoleRequest *api_models.ChangeRoleRequest) {
	o.ChangeRoleRequest = changeRoleRequest
}

// WithOrganizationID adds the organizationID to the remove user roles params
func (o *RemoveUserRolesParams) WithOrganizationID(organizationID string) *RemoveUserRolesParams {
	o.SetOrganizationID(organizationID)
	return o
}

// SetOrganizationID adds the organizationId to the remove user roles params
func (o *RemoveUserRolesParams) SetOrganizationID(organizationID string) {
	o.OrganizationID = organizationID
}

// WithUsername adds the username to the remove user roles params
func (o *RemoveUserRolesParams) WithUsername(username string) *RemoveUserRolesParams {
	o.SetUsername(username)
	return o
}

// SetUsername adds the username to the remove user roles params
func (o *RemoveUserRolesParams) SetUsername(username string) {
	o.Username = username
}

// WriteToRequest writes these params to a swagger request
func (o *RemoveUserRolesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ChangeRoleRequest != nil {
		if err := r.SetBodyParam(o.ChangeRoleRequest); err != nil {
			return err
		}
	}

	// path param organizationId
	if err := r.SetPathParam("organizationId", o.OrganizationID); err != nil {
		return err
	}

	// path param username
	if err := r.SetPathParam("username", o.Username); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
