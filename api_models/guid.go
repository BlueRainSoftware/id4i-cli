// Code generated by go-swagger; DO NOT EDIT.

package api_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GUID Guid
// swagger:model Guid
type GUID struct {

	// The UTC unix timestamp of when this GUID has been created
	// Read Only: true
	CreatedTimestamp int64 `json:"createdTimestamp,omitempty"`

	// Organization namespace of the GUID holder
	// Read Only: true
	HolderOrganizationID string `json:"holderOrganizationId,omitempty"`

	// The ID
	// Read Only: true
	ID4N string `json:"id4n,omitempty"`

	// Organization namespace of the GUID owner
	// Read Only: true
	OwnerOrganizationID string `json:"ownerOrganizationId,omitempty"`

	// Physical attachment state of the GUID
	// Enum: [UNATTACHED ATTACHED DETACHED]
	PhysicalState string `json:"physicalState,omitempty"`
}

// Validate validates this Guid
func (m *GUID) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePhysicalState(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var guidTypePhysicalStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["UNATTACHED","ATTACHED","DETACHED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		guidTypePhysicalStatePropEnum = append(guidTypePhysicalStatePropEnum, v)
	}
}

const (

	// GUIDPhysicalStateUNATTACHED captures enum value "UNATTACHED"
	GUIDPhysicalStateUNATTACHED string = "UNATTACHED"

	// GUIDPhysicalStateATTACHED captures enum value "ATTACHED"
	GUIDPhysicalStateATTACHED string = "ATTACHED"

	// GUIDPhysicalStateDETACHED captures enum value "DETACHED"
	GUIDPhysicalStateDETACHED string = "DETACHED"
)

// prop value enum
func (m *GUID) validatePhysicalStateEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, guidTypePhysicalStatePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *GUID) validatePhysicalState(formats strfmt.Registry) error {

	if swag.IsZero(m.PhysicalState) { // not required
		return nil
	}

	// value enum
	if err := m.validatePhysicalStateEnum("physicalState", "body", m.PhysicalState); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GUID) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GUID) UnmarshalBinary(b []byte) error {
	var res GUID
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
