// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	api_models "github.com/BlueRainSoftware/id4i-cli/api_models"
)

// UpdateRoutingFileReader is a Reader for the UpdateRoutingFile structure.
type UpdateRoutingFileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateRoutingFileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateRoutingFileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewUpdateRoutingFileAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUpdateRoutingFileBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewUpdateRoutingFileUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewUpdateRoutingFileForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewUpdateRoutingFileNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewUpdateRoutingFileMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 406:
		result := NewUpdateRoutingFileNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewUpdateRoutingFileConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewUpdateRoutingFileUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewUpdateRoutingFileInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateRoutingFileOK creates a UpdateRoutingFileOK with default headers values
func NewUpdateRoutingFileOK() *UpdateRoutingFileOK {
	return &UpdateRoutingFileOK{}
}

/*UpdateRoutingFileOK handles this case with default header values.

OK
*/
type UpdateRoutingFileOK struct {
}

func (o *UpdateRoutingFileOK) Error() string {
	return fmt.Sprintf("[PUT /api/v1/routingfiles/{id4n}][%d] updateRoutingFileOK ", 200)
}

func (o *UpdateRoutingFileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRoutingFileAccepted creates a UpdateRoutingFileAccepted with default headers values
func NewUpdateRoutingFileAccepted() *UpdateRoutingFileAccepted {
	return &UpdateRoutingFileAccepted{}
}

/*UpdateRoutingFileAccepted handles this case with default header values.

Accepted
*/
type UpdateRoutingFileAccepted struct {
}

func (o *UpdateRoutingFileAccepted) Error() string {
	return fmt.Sprintf("[PUT /api/v1/routingfiles/{id4n}][%d] updateRoutingFileAccepted ", 202)
}

func (o *UpdateRoutingFileAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRoutingFileBadRequest creates a UpdateRoutingFileBadRequest with default headers values
func NewUpdateRoutingFileBadRequest() *UpdateRoutingFileBadRequest {
	return &UpdateRoutingFileBadRequest{}
}

/*UpdateRoutingFileBadRequest handles this case with default header values.

Bad Request
*/
type UpdateRoutingFileBadRequest struct {
	Payload *api_models.APIError
}

func (o *UpdateRoutingFileBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v1/routingfiles/{id4n}][%d] updateRoutingFileBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateRoutingFileBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRoutingFileUnauthorized creates a UpdateRoutingFileUnauthorized with default headers values
func NewUpdateRoutingFileUnauthorized() *UpdateRoutingFileUnauthorized {
	return &UpdateRoutingFileUnauthorized{}
}

/*UpdateRoutingFileUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateRoutingFileUnauthorized struct {
	Payload *api_models.APIError
}

func (o *UpdateRoutingFileUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v1/routingfiles/{id4n}][%d] updateRoutingFileUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateRoutingFileUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRoutingFileForbidden creates a UpdateRoutingFileForbidden with default headers values
func NewUpdateRoutingFileForbidden() *UpdateRoutingFileForbidden {
	return &UpdateRoutingFileForbidden{}
}

/*UpdateRoutingFileForbidden handles this case with default header values.

Forbidden
*/
type UpdateRoutingFileForbidden struct {
	Payload *api_models.APIError
}

func (o *UpdateRoutingFileForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v1/routingfiles/{id4n}][%d] updateRoutingFileForbidden  %+v", 403, o.Payload)
}

func (o *UpdateRoutingFileForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRoutingFileNotFound creates a UpdateRoutingFileNotFound with default headers values
func NewUpdateRoutingFileNotFound() *UpdateRoutingFileNotFound {
	return &UpdateRoutingFileNotFound{}
}

/*UpdateRoutingFileNotFound handles this case with default header values.

Not Found
*/
type UpdateRoutingFileNotFound struct {
	Payload *api_models.APIError
}

func (o *UpdateRoutingFileNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v1/routingfiles/{id4n}][%d] updateRoutingFileNotFound  %+v", 404, o.Payload)
}

func (o *UpdateRoutingFileNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRoutingFileMethodNotAllowed creates a UpdateRoutingFileMethodNotAllowed with default headers values
func NewUpdateRoutingFileMethodNotAllowed() *UpdateRoutingFileMethodNotAllowed {
	return &UpdateRoutingFileMethodNotAllowed{}
}

/*UpdateRoutingFileMethodNotAllowed handles this case with default header values.

Method not allowed
*/
type UpdateRoutingFileMethodNotAllowed struct {
	Payload *api_models.APIError
}

func (o *UpdateRoutingFileMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /api/v1/routingfiles/{id4n}][%d] updateRoutingFileMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *UpdateRoutingFileMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRoutingFileNotAcceptable creates a UpdateRoutingFileNotAcceptable with default headers values
func NewUpdateRoutingFileNotAcceptable() *UpdateRoutingFileNotAcceptable {
	return &UpdateRoutingFileNotAcceptable{}
}

/*UpdateRoutingFileNotAcceptable handles this case with default header values.

Not Acceptable
*/
type UpdateRoutingFileNotAcceptable struct {
	Payload *api_models.APIError
}

func (o *UpdateRoutingFileNotAcceptable) Error() string {
	return fmt.Sprintf("[PUT /api/v1/routingfiles/{id4n}][%d] updateRoutingFileNotAcceptable  %+v", 406, o.Payload)
}

func (o *UpdateRoutingFileNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRoutingFileConflict creates a UpdateRoutingFileConflict with default headers values
func NewUpdateRoutingFileConflict() *UpdateRoutingFileConflict {
	return &UpdateRoutingFileConflict{}
}

/*UpdateRoutingFileConflict handles this case with default header values.

Conflict
*/
type UpdateRoutingFileConflict struct {
	Payload *api_models.APIError
}

func (o *UpdateRoutingFileConflict) Error() string {
	return fmt.Sprintf("[PUT /api/v1/routingfiles/{id4n}][%d] updateRoutingFileConflict  %+v", 409, o.Payload)
}

func (o *UpdateRoutingFileConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRoutingFileUnsupportedMediaType creates a UpdateRoutingFileUnsupportedMediaType with default headers values
func NewUpdateRoutingFileUnsupportedMediaType() *UpdateRoutingFileUnsupportedMediaType {
	return &UpdateRoutingFileUnsupportedMediaType{}
}

/*UpdateRoutingFileUnsupportedMediaType handles this case with default header values.

Unsupported Media Type
*/
type UpdateRoutingFileUnsupportedMediaType struct {
	Payload *api_models.APIError
}

func (o *UpdateRoutingFileUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v1/routingfiles/{id4n}][%d] updateRoutingFileUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *UpdateRoutingFileUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRoutingFileInternalServerError creates a UpdateRoutingFileInternalServerError with default headers values
func NewUpdateRoutingFileInternalServerError() *UpdateRoutingFileInternalServerError {
	return &UpdateRoutingFileInternalServerError{}
}

/*UpdateRoutingFileInternalServerError handles this case with default header values.

Internal Server Error
*/
type UpdateRoutingFileInternalServerError struct {
	Payload *api_models.APIError
}

func (o *UpdateRoutingFileInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v1/routingfiles/{id4n}][%d] updateRoutingFileInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateRoutingFileInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
