// Code generated by go-swagger; DO NOT EDIT.

package api_keys

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	api_models "github.com/BlueRainSoftware/id4i-cli/api/models"
)

// AddAPIKeyPrivilegeReader is a Reader for the AddAPIKeyPrivilege structure.
type AddAPIKeyPrivilegeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddAPIKeyPrivilegeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewAddAPIKeyPrivilegeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewAddAPIKeyPrivilegeCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewAddAPIKeyPrivilegeAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewAddAPIKeyPrivilegeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewAddAPIKeyPrivilegeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewAddAPIKeyPrivilegeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewAddAPIKeyPrivilegeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewAddAPIKeyPrivilegeMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 406:
		result := NewAddAPIKeyPrivilegeNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewAddAPIKeyPrivilegeConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewAddAPIKeyPrivilegeUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewAddAPIKeyPrivilegeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddAPIKeyPrivilegeOK creates a AddAPIKeyPrivilegeOK with default headers values
func NewAddAPIKeyPrivilegeOK() *AddAPIKeyPrivilegeOK {
	return &AddAPIKeyPrivilegeOK{}
}

/*AddAPIKeyPrivilegeOK handles this case with default header values.

OK
*/
type AddAPIKeyPrivilegeOK struct {
}

func (o *AddAPIKeyPrivilegeOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/apikeys/{key}/privileges][%d] addApiKeyPrivilegeOK ", 200)
}

func (o *AddAPIKeyPrivilegeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddAPIKeyPrivilegeCreated creates a AddAPIKeyPrivilegeCreated with default headers values
func NewAddAPIKeyPrivilegeCreated() *AddAPIKeyPrivilegeCreated {
	return &AddAPIKeyPrivilegeCreated{}
}

/*AddAPIKeyPrivilegeCreated handles this case with default header values.

Created
*/
type AddAPIKeyPrivilegeCreated struct {
}

func (o *AddAPIKeyPrivilegeCreated) Error() string {
	return fmt.Sprintf("[POST /api/v1/apikeys/{key}/privileges][%d] addApiKeyPrivilegeCreated ", 201)
}

func (o *AddAPIKeyPrivilegeCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddAPIKeyPrivilegeAccepted creates a AddAPIKeyPrivilegeAccepted with default headers values
func NewAddAPIKeyPrivilegeAccepted() *AddAPIKeyPrivilegeAccepted {
	return &AddAPIKeyPrivilegeAccepted{}
}

/*AddAPIKeyPrivilegeAccepted handles this case with default header values.

Accepted
*/
type AddAPIKeyPrivilegeAccepted struct {
}

func (o *AddAPIKeyPrivilegeAccepted) Error() string {
	return fmt.Sprintf("[POST /api/v1/apikeys/{key}/privileges][%d] addApiKeyPrivilegeAccepted ", 202)
}

func (o *AddAPIKeyPrivilegeAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddAPIKeyPrivilegeBadRequest creates a AddAPIKeyPrivilegeBadRequest with default headers values
func NewAddAPIKeyPrivilegeBadRequest() *AddAPIKeyPrivilegeBadRequest {
	return &AddAPIKeyPrivilegeBadRequest{}
}

/*AddAPIKeyPrivilegeBadRequest handles this case with default header values.

Bad Request
*/
type AddAPIKeyPrivilegeBadRequest struct {
	Payload *api_models.APIError
}

func (o *AddAPIKeyPrivilegeBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1/apikeys/{key}/privileges][%d] addApiKeyPrivilegeBadRequest  %+v", 400, o.Payload)
}

func (o *AddAPIKeyPrivilegeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddAPIKeyPrivilegeUnauthorized creates a AddAPIKeyPrivilegeUnauthorized with default headers values
func NewAddAPIKeyPrivilegeUnauthorized() *AddAPIKeyPrivilegeUnauthorized {
	return &AddAPIKeyPrivilegeUnauthorized{}
}

/*AddAPIKeyPrivilegeUnauthorized handles this case with default header values.

Unauthorized
*/
type AddAPIKeyPrivilegeUnauthorized struct {
	Payload *api_models.APIError
}

func (o *AddAPIKeyPrivilegeUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v1/apikeys/{key}/privileges][%d] addApiKeyPrivilegeUnauthorized  %+v", 401, o.Payload)
}

func (o *AddAPIKeyPrivilegeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddAPIKeyPrivilegeForbidden creates a AddAPIKeyPrivilegeForbidden with default headers values
func NewAddAPIKeyPrivilegeForbidden() *AddAPIKeyPrivilegeForbidden {
	return &AddAPIKeyPrivilegeForbidden{}
}

/*AddAPIKeyPrivilegeForbidden handles this case with default header values.

Forbidden
*/
type AddAPIKeyPrivilegeForbidden struct {
	Payload *api_models.APIError
}

func (o *AddAPIKeyPrivilegeForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/apikeys/{key}/privileges][%d] addApiKeyPrivilegeForbidden  %+v", 403, o.Payload)
}

func (o *AddAPIKeyPrivilegeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddAPIKeyPrivilegeNotFound creates a AddAPIKeyPrivilegeNotFound with default headers values
func NewAddAPIKeyPrivilegeNotFound() *AddAPIKeyPrivilegeNotFound {
	return &AddAPIKeyPrivilegeNotFound{}
}

/*AddAPIKeyPrivilegeNotFound handles this case with default header values.

Not Found
*/
type AddAPIKeyPrivilegeNotFound struct {
	Payload *api_models.APIError
}

func (o *AddAPIKeyPrivilegeNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/apikeys/{key}/privileges][%d] addApiKeyPrivilegeNotFound  %+v", 404, o.Payload)
}

func (o *AddAPIKeyPrivilegeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddAPIKeyPrivilegeMethodNotAllowed creates a AddAPIKeyPrivilegeMethodNotAllowed with default headers values
func NewAddAPIKeyPrivilegeMethodNotAllowed() *AddAPIKeyPrivilegeMethodNotAllowed {
	return &AddAPIKeyPrivilegeMethodNotAllowed{}
}

/*AddAPIKeyPrivilegeMethodNotAllowed handles this case with default header values.

Method not allowed
*/
type AddAPIKeyPrivilegeMethodNotAllowed struct {
	Payload *api_models.APIError
}

func (o *AddAPIKeyPrivilegeMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /api/v1/apikeys/{key}/privileges][%d] addApiKeyPrivilegeMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *AddAPIKeyPrivilegeMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddAPIKeyPrivilegeNotAcceptable creates a AddAPIKeyPrivilegeNotAcceptable with default headers values
func NewAddAPIKeyPrivilegeNotAcceptable() *AddAPIKeyPrivilegeNotAcceptable {
	return &AddAPIKeyPrivilegeNotAcceptable{}
}

/*AddAPIKeyPrivilegeNotAcceptable handles this case with default header values.

Not Acceptable
*/
type AddAPIKeyPrivilegeNotAcceptable struct {
	Payload *api_models.APIError
}

func (o *AddAPIKeyPrivilegeNotAcceptable) Error() string {
	return fmt.Sprintf("[POST /api/v1/apikeys/{key}/privileges][%d] addApiKeyPrivilegeNotAcceptable  %+v", 406, o.Payload)
}

func (o *AddAPIKeyPrivilegeNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddAPIKeyPrivilegeConflict creates a AddAPIKeyPrivilegeConflict with default headers values
func NewAddAPIKeyPrivilegeConflict() *AddAPIKeyPrivilegeConflict {
	return &AddAPIKeyPrivilegeConflict{}
}

/*AddAPIKeyPrivilegeConflict handles this case with default header values.

Conflict
*/
type AddAPIKeyPrivilegeConflict struct {
	Payload *api_models.APIError
}

func (o *AddAPIKeyPrivilegeConflict) Error() string {
	return fmt.Sprintf("[POST /api/v1/apikeys/{key}/privileges][%d] addApiKeyPrivilegeConflict  %+v", 409, o.Payload)
}

func (o *AddAPIKeyPrivilegeConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddAPIKeyPrivilegeUnsupportedMediaType creates a AddAPIKeyPrivilegeUnsupportedMediaType with default headers values
func NewAddAPIKeyPrivilegeUnsupportedMediaType() *AddAPIKeyPrivilegeUnsupportedMediaType {
	return &AddAPIKeyPrivilegeUnsupportedMediaType{}
}

/*AddAPIKeyPrivilegeUnsupportedMediaType handles this case with default header values.

Unsupported Media Type
*/
type AddAPIKeyPrivilegeUnsupportedMediaType struct {
	Payload *api_models.APIError
}

func (o *AddAPIKeyPrivilegeUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v1/apikeys/{key}/privileges][%d] addApiKeyPrivilegeUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *AddAPIKeyPrivilegeUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddAPIKeyPrivilegeInternalServerError creates a AddAPIKeyPrivilegeInternalServerError with default headers values
func NewAddAPIKeyPrivilegeInternalServerError() *AddAPIKeyPrivilegeInternalServerError {
	return &AddAPIKeyPrivilegeInternalServerError{}
}

/*AddAPIKeyPrivilegeInternalServerError handles this case with default header values.

Internal Server Error
*/
type AddAPIKeyPrivilegeInternalServerError struct {
	Payload *api_models.APIError
}

func (o *AddAPIKeyPrivilegeInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1/apikeys/{key}/privileges][%d] addApiKeyPrivilegeInternalServerError  %+v", 500, o.Payload)
}

func (o *AddAPIKeyPrivilegeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
