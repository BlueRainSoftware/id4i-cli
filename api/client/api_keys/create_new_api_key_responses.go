// Code generated by go-swagger; DO NOT EDIT.

package api_keys

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	api_models "github.com/BlueRainSoftware/id4i-cli/api/models"
)

// CreateNewAPIKeyReader is a Reader for the CreateNewAPIKey structure.
type CreateNewAPIKeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateNewAPIKeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCreateNewAPIKeyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewCreateNewAPIKeyCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewCreateNewAPIKeyAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateNewAPIKeyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewCreateNewAPIKeyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewCreateNewAPIKeyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewCreateNewAPIKeyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewCreateNewAPIKeyMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 406:
		result := NewCreateNewAPIKeyNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewCreateNewAPIKeyConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewCreateNewAPIKeyUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewCreateNewAPIKeyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateNewAPIKeyOK creates a CreateNewAPIKeyOK with default headers values
func NewCreateNewAPIKeyOK() *CreateNewAPIKeyOK {
	return &CreateNewAPIKeyOK{}
}

/*CreateNewAPIKeyOK handles this case with default header values.

OK
*/
type CreateNewAPIKeyOK struct {
	Payload *api_models.APIKeyPresentation
}

func (o *CreateNewAPIKeyOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/apikeys][%d] createNewApiKeyOK  %+v", 200, o.Payload)
}

func (o *CreateNewAPIKeyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIKeyPresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNewAPIKeyCreated creates a CreateNewAPIKeyCreated with default headers values
func NewCreateNewAPIKeyCreated() *CreateNewAPIKeyCreated {
	return &CreateNewAPIKeyCreated{}
}

/*CreateNewAPIKeyCreated handles this case with default header values.

Created
*/
type CreateNewAPIKeyCreated struct {
}

func (o *CreateNewAPIKeyCreated) Error() string {
	return fmt.Sprintf("[POST /api/v1/apikeys][%d] createNewApiKeyCreated ", 201)
}

func (o *CreateNewAPIKeyCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateNewAPIKeyAccepted creates a CreateNewAPIKeyAccepted with default headers values
func NewCreateNewAPIKeyAccepted() *CreateNewAPIKeyAccepted {
	return &CreateNewAPIKeyAccepted{}
}

/*CreateNewAPIKeyAccepted handles this case with default header values.

Accepted
*/
type CreateNewAPIKeyAccepted struct {
}

func (o *CreateNewAPIKeyAccepted) Error() string {
	return fmt.Sprintf("[POST /api/v1/apikeys][%d] createNewApiKeyAccepted ", 202)
}

func (o *CreateNewAPIKeyAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateNewAPIKeyBadRequest creates a CreateNewAPIKeyBadRequest with default headers values
func NewCreateNewAPIKeyBadRequest() *CreateNewAPIKeyBadRequest {
	return &CreateNewAPIKeyBadRequest{}
}

/*CreateNewAPIKeyBadRequest handles this case with default header values.

Bad Request
*/
type CreateNewAPIKeyBadRequest struct {
	Payload *api_models.APIError
}

func (o *CreateNewAPIKeyBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1/apikeys][%d] createNewApiKeyBadRequest  %+v", 400, o.Payload)
}

func (o *CreateNewAPIKeyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNewAPIKeyUnauthorized creates a CreateNewAPIKeyUnauthorized with default headers values
func NewCreateNewAPIKeyUnauthorized() *CreateNewAPIKeyUnauthorized {
	return &CreateNewAPIKeyUnauthorized{}
}

/*CreateNewAPIKeyUnauthorized handles this case with default header values.

Unauthorized
*/
type CreateNewAPIKeyUnauthorized struct {
	Payload *api_models.APIError
}

func (o *CreateNewAPIKeyUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v1/apikeys][%d] createNewApiKeyUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateNewAPIKeyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNewAPIKeyForbidden creates a CreateNewAPIKeyForbidden with default headers values
func NewCreateNewAPIKeyForbidden() *CreateNewAPIKeyForbidden {
	return &CreateNewAPIKeyForbidden{}
}

/*CreateNewAPIKeyForbidden handles this case with default header values.

Forbidden
*/
type CreateNewAPIKeyForbidden struct {
	Payload *api_models.APIError
}

func (o *CreateNewAPIKeyForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/apikeys][%d] createNewApiKeyForbidden  %+v", 403, o.Payload)
}

func (o *CreateNewAPIKeyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNewAPIKeyNotFound creates a CreateNewAPIKeyNotFound with default headers values
func NewCreateNewAPIKeyNotFound() *CreateNewAPIKeyNotFound {
	return &CreateNewAPIKeyNotFound{}
}

/*CreateNewAPIKeyNotFound handles this case with default header values.

Not Found
*/
type CreateNewAPIKeyNotFound struct {
	Payload *api_models.APIError
}

func (o *CreateNewAPIKeyNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/apikeys][%d] createNewApiKeyNotFound  %+v", 404, o.Payload)
}

func (o *CreateNewAPIKeyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNewAPIKeyMethodNotAllowed creates a CreateNewAPIKeyMethodNotAllowed with default headers values
func NewCreateNewAPIKeyMethodNotAllowed() *CreateNewAPIKeyMethodNotAllowed {
	return &CreateNewAPIKeyMethodNotAllowed{}
}

/*CreateNewAPIKeyMethodNotAllowed handles this case with default header values.

Method not allowed
*/
type CreateNewAPIKeyMethodNotAllowed struct {
	Payload *api_models.APIError
}

func (o *CreateNewAPIKeyMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /api/v1/apikeys][%d] createNewApiKeyMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *CreateNewAPIKeyMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNewAPIKeyNotAcceptable creates a CreateNewAPIKeyNotAcceptable with default headers values
func NewCreateNewAPIKeyNotAcceptable() *CreateNewAPIKeyNotAcceptable {
	return &CreateNewAPIKeyNotAcceptable{}
}

/*CreateNewAPIKeyNotAcceptable handles this case with default header values.

Not Acceptable
*/
type CreateNewAPIKeyNotAcceptable struct {
	Payload *api_models.APIError
}

func (o *CreateNewAPIKeyNotAcceptable) Error() string {
	return fmt.Sprintf("[POST /api/v1/apikeys][%d] createNewApiKeyNotAcceptable  %+v", 406, o.Payload)
}

func (o *CreateNewAPIKeyNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNewAPIKeyConflict creates a CreateNewAPIKeyConflict with default headers values
func NewCreateNewAPIKeyConflict() *CreateNewAPIKeyConflict {
	return &CreateNewAPIKeyConflict{}
}

/*CreateNewAPIKeyConflict handles this case with default header values.

Conflict
*/
type CreateNewAPIKeyConflict struct {
	Payload *api_models.APIError
}

func (o *CreateNewAPIKeyConflict) Error() string {
	return fmt.Sprintf("[POST /api/v1/apikeys][%d] createNewApiKeyConflict  %+v", 409, o.Payload)
}

func (o *CreateNewAPIKeyConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNewAPIKeyUnsupportedMediaType creates a CreateNewAPIKeyUnsupportedMediaType with default headers values
func NewCreateNewAPIKeyUnsupportedMediaType() *CreateNewAPIKeyUnsupportedMediaType {
	return &CreateNewAPIKeyUnsupportedMediaType{}
}

/*CreateNewAPIKeyUnsupportedMediaType handles this case with default header values.

Unsupported Media Type
*/
type CreateNewAPIKeyUnsupportedMediaType struct {
	Payload *api_models.APIError
}

func (o *CreateNewAPIKeyUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v1/apikeys][%d] createNewApiKeyUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *CreateNewAPIKeyUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNewAPIKeyInternalServerError creates a CreateNewAPIKeyInternalServerError with default headers values
func NewCreateNewAPIKeyInternalServerError() *CreateNewAPIKeyInternalServerError {
	return &CreateNewAPIKeyInternalServerError{}
}

/*CreateNewAPIKeyInternalServerError handles this case with default header values.

Internal Server Error
*/
type CreateNewAPIKeyInternalServerError struct {
	Payload *api_models.APIError
}

func (o *CreateNewAPIKeyInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1/apikeys][%d] createNewApiKeyInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateNewAPIKeyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
