// Code generated by go-swagger; DO NOT EDIT.

package api_keys

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	api_models "github.com/BlueRainSoftware/id4i-cli/api/models"
)

// NewRemoveAPIKeyPrivilegeForId4nsParams creates a new RemoveAPIKeyPrivilegeForId4nsParams object
// with the default values initialized.
func NewRemoveAPIKeyPrivilegeForId4nsParams() *RemoveAPIKeyPrivilegeForId4nsParams {
	var ()
	return &RemoveAPIKeyPrivilegeForId4nsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewRemoveAPIKeyPrivilegeForId4nsParamsWithTimeout creates a new RemoveAPIKeyPrivilegeForId4nsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewRemoveAPIKeyPrivilegeForId4nsParamsWithTimeout(timeout time.Duration) *RemoveAPIKeyPrivilegeForId4nsParams {
	var ()
	return &RemoveAPIKeyPrivilegeForId4nsParams{

		timeout: timeout,
	}
}

// NewRemoveAPIKeyPrivilegeForId4nsParamsWithContext creates a new RemoveAPIKeyPrivilegeForId4nsParams object
// with the default values initialized, and the ability to set a context for a request
func NewRemoveAPIKeyPrivilegeForId4nsParamsWithContext(ctx context.Context) *RemoveAPIKeyPrivilegeForId4nsParams {
	var ()
	return &RemoveAPIKeyPrivilegeForId4nsParams{

		Context: ctx,
	}
}

// NewRemoveAPIKeyPrivilegeForId4nsParamsWithHTTPClient creates a new RemoveAPIKeyPrivilegeForId4nsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewRemoveAPIKeyPrivilegeForId4nsParamsWithHTTPClient(client *http.Client) *RemoveAPIKeyPrivilegeForId4nsParams {
	var ()
	return &RemoveAPIKeyPrivilegeForId4nsParams{
		HTTPClient: client,
	}
}

/*RemoveAPIKeyPrivilegeForId4nsParams contains all the parameters to send to the API endpoint
for the remove Api key privilege for id4ns operation typically these are written to a http.Request
*/
type RemoveAPIKeyPrivilegeForId4nsParams struct {

	/*Id4ns
	  id4ns

	*/
	Id4ns *api_models.ListOfId4ns
	/*Key
	  key

	*/
	Key string
	/*Privilege
	  privilege

	*/
	Privilege string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the remove Api key privilege for id4ns params
func (o *RemoveAPIKeyPrivilegeForId4nsParams) WithTimeout(timeout time.Duration) *RemoveAPIKeyPrivilegeForId4nsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the remove Api key privilege for id4ns params
func (o *RemoveAPIKeyPrivilegeForId4nsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the remove Api key privilege for id4ns params
func (o *RemoveAPIKeyPrivilegeForId4nsParams) WithContext(ctx context.Context) *RemoveAPIKeyPrivilegeForId4nsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the remove Api key privilege for id4ns params
func (o *RemoveAPIKeyPrivilegeForId4nsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the remove Api key privilege for id4ns params
func (o *RemoveAPIKeyPrivilegeForId4nsParams) WithHTTPClient(client *http.Client) *RemoveAPIKeyPrivilegeForId4nsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the remove Api key privilege for id4ns params
func (o *RemoveAPIKeyPrivilegeForId4nsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithId4ns adds the id4ns to the remove Api key privilege for id4ns params
func (o *RemoveAPIKeyPrivilegeForId4nsParams) WithId4ns(id4ns *api_models.ListOfId4ns) *RemoveAPIKeyPrivilegeForId4nsParams {
	o.SetId4ns(id4ns)
	return o
}

// SetId4ns adds the id4ns to the remove Api key privilege for id4ns params
func (o *RemoveAPIKeyPrivilegeForId4nsParams) SetId4ns(id4ns *api_models.ListOfId4ns) {
	o.Id4ns = id4ns
}

// WithKey adds the key to the remove Api key privilege for id4ns params
func (o *RemoveAPIKeyPrivilegeForId4nsParams) WithKey(key string) *RemoveAPIKeyPrivilegeForId4nsParams {
	o.SetKey(key)
	return o
}

// SetKey adds the key to the remove Api key privilege for id4ns params
func (o *RemoveAPIKeyPrivilegeForId4nsParams) SetKey(key string) {
	o.Key = key
}

// WithPrivilege adds the privilege to the remove Api key privilege for id4ns params
func (o *RemoveAPIKeyPrivilegeForId4nsParams) WithPrivilege(privilege string) *RemoveAPIKeyPrivilegeForId4nsParams {
	o.SetPrivilege(privilege)
	return o
}

// SetPrivilege adds the privilege to the remove Api key privilege for id4ns params
func (o *RemoveAPIKeyPrivilegeForId4nsParams) SetPrivilege(privilege string) {
	o.Privilege = privilege
}

// WriteToRequest writes these params to a swagger request
func (o *RemoveAPIKeyPrivilegeForId4nsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Id4ns != nil {
		if err := r.SetBodyParam(o.Id4ns); err != nil {
			return err
		}
	}

	// path param key
	if err := r.SetPathParam("key", o.Key); err != nil {
		return err
	}

	// path param privilege
	if err := r.SetPathParam("privilege", o.Privilege); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
