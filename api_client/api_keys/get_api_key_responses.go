// Code generated by go-swagger; DO NOT EDIT.

package api_keys

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	api_models "github.com/BlueRainSoftware/id4i-cli/api_models"
)

// GETAPIKeyReader is a Reader for the GETAPIKey structure.
type GETAPIKeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GETAPIKeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGETAPIKeyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewGETAPIKeyAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGETAPIKeyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGETAPIKeyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGETAPIKeyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewGETAPIKeyMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 406:
		result := NewGETAPIKeyNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGETAPIKeyUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGETAPIKeyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGETAPIKeyOK creates a GETAPIKeyOK with default headers values
func NewGETAPIKeyOK() *GETAPIKeyOK {
	return &GETAPIKeyOK{}
}

/*GETAPIKeyOK handles this case with default header values.

OK
*/
type GETAPIKeyOK struct {
	Payload *api_models.APIKeyPresentation
}

func (o *GETAPIKeyOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/apikeys/{key}][%d] getApiKeyOK  %+v", 200, o.Payload)
}

func (o *GETAPIKeyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIKeyPresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETAPIKeyAccepted creates a GETAPIKeyAccepted with default headers values
func NewGETAPIKeyAccepted() *GETAPIKeyAccepted {
	return &GETAPIKeyAccepted{}
}

/*GETAPIKeyAccepted handles this case with default header values.

Accepted
*/
type GETAPIKeyAccepted struct {
}

func (o *GETAPIKeyAccepted) Error() string {
	return fmt.Sprintf("[GET /api/v1/apikeys/{key}][%d] getApiKeyAccepted ", 202)
}

func (o *GETAPIKeyAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGETAPIKeyUnauthorized creates a GETAPIKeyUnauthorized with default headers values
func NewGETAPIKeyUnauthorized() *GETAPIKeyUnauthorized {
	return &GETAPIKeyUnauthorized{}
}

/*GETAPIKeyUnauthorized handles this case with default header values.

Unauthorized
*/
type GETAPIKeyUnauthorized struct {
	Payload *api_models.APIError
}

func (o *GETAPIKeyUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/apikeys/{key}][%d] getApiKeyUnauthorized  %+v", 401, o.Payload)
}

func (o *GETAPIKeyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETAPIKeyForbidden creates a GETAPIKeyForbidden with default headers values
func NewGETAPIKeyForbidden() *GETAPIKeyForbidden {
	return &GETAPIKeyForbidden{}
}

/*GETAPIKeyForbidden handles this case with default header values.

Forbidden
*/
type GETAPIKeyForbidden struct {
	Payload *api_models.APIError
}

func (o *GETAPIKeyForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/apikeys/{key}][%d] getApiKeyForbidden  %+v", 403, o.Payload)
}

func (o *GETAPIKeyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETAPIKeyNotFound creates a GETAPIKeyNotFound with default headers values
func NewGETAPIKeyNotFound() *GETAPIKeyNotFound {
	return &GETAPIKeyNotFound{}
}

/*GETAPIKeyNotFound handles this case with default header values.

Not Found
*/
type GETAPIKeyNotFound struct {
	Payload *api_models.APIError
}

func (o *GETAPIKeyNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/apikeys/{key}][%d] getApiKeyNotFound  %+v", 404, o.Payload)
}

func (o *GETAPIKeyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETAPIKeyMethodNotAllowed creates a GETAPIKeyMethodNotAllowed with default headers values
func NewGETAPIKeyMethodNotAllowed() *GETAPIKeyMethodNotAllowed {
	return &GETAPIKeyMethodNotAllowed{}
}

/*GETAPIKeyMethodNotAllowed handles this case with default header values.

Method not allowed
*/
type GETAPIKeyMethodNotAllowed struct {
	Payload *api_models.APIError
}

func (o *GETAPIKeyMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/v1/apikeys/{key}][%d] getApiKeyMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *GETAPIKeyMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETAPIKeyNotAcceptable creates a GETAPIKeyNotAcceptable with default headers values
func NewGETAPIKeyNotAcceptable() *GETAPIKeyNotAcceptable {
	return &GETAPIKeyNotAcceptable{}
}

/*GETAPIKeyNotAcceptable handles this case with default header values.

Not Acceptable
*/
type GETAPIKeyNotAcceptable struct {
	Payload *api_models.APIError
}

func (o *GETAPIKeyNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /api/v1/apikeys/{key}][%d] getApiKeyNotAcceptable  %+v", 406, o.Payload)
}

func (o *GETAPIKeyNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETAPIKeyUnsupportedMediaType creates a GETAPIKeyUnsupportedMediaType with default headers values
func NewGETAPIKeyUnsupportedMediaType() *GETAPIKeyUnsupportedMediaType {
	return &GETAPIKeyUnsupportedMediaType{}
}

/*GETAPIKeyUnsupportedMediaType handles this case with default header values.

Unsupported Media Type
*/
type GETAPIKeyUnsupportedMediaType struct {
	Payload *api_models.APIError
}

func (o *GETAPIKeyUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v1/apikeys/{key}][%d] getApiKeyUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GETAPIKeyUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETAPIKeyInternalServerError creates a GETAPIKeyInternalServerError with default headers values
func NewGETAPIKeyInternalServerError() *GETAPIKeyInternalServerError {
	return &GETAPIKeyInternalServerError{}
}

/*GETAPIKeyInternalServerError handles this case with default header values.

Internal Server Error
*/
type GETAPIKeyInternalServerError struct {
	Payload *api_models.APIError
}

func (o *GETAPIKeyInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/apikeys/{key}][%d] getApiKeyInternalServerError  %+v", 500, o.Payload)
}

func (o *GETAPIKeyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
