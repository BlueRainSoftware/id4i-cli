// Code generated by go-swagger; DO NOT EDIT.

package api_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateGUIDRequest CreateGuidRequest
//
// GUID creation information
// swagger:model CreateGuidRequest
type CreateGUIDRequest struct {

	// The total number of GUIDs to create
	// Required: true
	// Maximum: 1000
	// Minimum: 1
	Count *int32 `json:"count"`

	// The charactersequence length of the GUID
	// Required: true
	// Maximum: 255
	// Minimum: 7
	Length *int32 `json:"length"`

	// The namespace of the organization where the generated GUIDs should be assigned.
	// Required: true
	OrganizationID *string `json:"organizationId"`
}

// Validate validates this create Guid request
func (m *CreateGUIDRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLength(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOrganizationID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateGUIDRequest) validateCount(formats strfmt.Registry) error {

	if err := validate.Required("count", "body", m.Count); err != nil {
		return err
	}

	if err := validate.MinimumInt("count", "body", int64(*m.Count), 1, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("count", "body", int64(*m.Count), 1000, false); err != nil {
		return err
	}

	return nil
}

func (m *CreateGUIDRequest) validateLength(formats strfmt.Registry) error {

	if err := validate.Required("length", "body", m.Length); err != nil {
		return err
	}

	if err := validate.MinimumInt("length", "body", int64(*m.Length), 7, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("length", "body", int64(*m.Length), 255, false); err != nil {
		return err
	}

	return nil
}

func (m *CreateGUIDRequest) validateOrganizationID(formats strfmt.Registry) error {

	if err := validate.Required("organizationId", "body", m.OrganizationID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CreateGUIDRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateGUIDRequest) UnmarshalBinary(b []byte) error {
	var res CreateGUIDRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
