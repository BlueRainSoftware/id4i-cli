// Code generated by go-swagger; DO NOT EDIT.

package api_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// APIKeyCreationRequest ApiKeyCreationRequest
// swagger:model ApiKeyCreationRequest
type APIKeyCreationRequest struct {

	// label
	// Required: true
	// Max Length: 50
	// Min Length: 5
	Label *string `json:"label"`

	// organization Id
	// Required: true
	OrganizationID *string `json:"organizationId"`

	// secret
	// Required: true
	// Max Length: 500
	// Min Length: 10
	Secret *string `json:"secret"`
}

// Validate validates this Api key creation request
func (m *APIKeyCreationRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLabel(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOrganizationID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSecret(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *APIKeyCreationRequest) validateLabel(formats strfmt.Registry) error {

	if err := validate.Required("label", "body", m.Label); err != nil {
		return err
	}

	if err := validate.MinLength("label", "body", string(*m.Label), 5); err != nil {
		return err
	}

	if err := validate.MaxLength("label", "body", string(*m.Label), 50); err != nil {
		return err
	}

	return nil
}

func (m *APIKeyCreationRequest) validateOrganizationID(formats strfmt.Registry) error {

	if err := validate.Required("organizationId", "body", m.OrganizationID); err != nil {
		return err
	}

	return nil
}

func (m *APIKeyCreationRequest) validateSecret(formats strfmt.Registry) error {

	if err := validate.Required("secret", "body", m.Secret); err != nil {
		return err
	}

	if err := validate.MinLength("secret", "body", string(*m.Secret), 10); err != nil {
		return err
	}

	if err := validate.MaxLength("secret", "body", string(*m.Secret), 500); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *APIKeyCreationRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *APIKeyCreationRequest) UnmarshalBinary(b []byte) error {
	var res APIKeyCreationRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
