// Code generated by go-swagger; DO NOT EDIT.

package history

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	api_models "github.com/BlueRainSoftware/id4i-cli/api_models"
)

// FilteredListReader is a Reader for the FilteredList structure.
type FilteredListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FilteredListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewFilteredListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewFilteredListAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewFilteredListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewFilteredListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewFilteredListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewFilteredListMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 406:
		result := NewFilteredListNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewFilteredListUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewFilteredListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewFilteredListOK creates a FilteredListOK with default headers values
func NewFilteredListOK() *FilteredListOK {
	return &FilteredListOK{}
}

/*FilteredListOK handles this case with default header values.

OK
*/
type FilteredListOK struct {
	Payload *api_models.PaginatedHistoryItemResponse
}

func (o *FilteredListOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/history/{id4n}][%d] filteredListOK  %+v", 200, o.Payload)
}

func (o *FilteredListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.PaginatedHistoryItemResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFilteredListAccepted creates a FilteredListAccepted with default headers values
func NewFilteredListAccepted() *FilteredListAccepted {
	return &FilteredListAccepted{}
}

/*FilteredListAccepted handles this case with default header values.

Accepted
*/
type FilteredListAccepted struct {
}

func (o *FilteredListAccepted) Error() string {
	return fmt.Sprintf("[GET /api/v1/history/{id4n}][%d] filteredListAccepted ", 202)
}

func (o *FilteredListAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFilteredListUnauthorized creates a FilteredListUnauthorized with default headers values
func NewFilteredListUnauthorized() *FilteredListUnauthorized {
	return &FilteredListUnauthorized{}
}

/*FilteredListUnauthorized handles this case with default header values.

Unauthorized
*/
type FilteredListUnauthorized struct {
	Payload *api_models.APIError
}

func (o *FilteredListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/history/{id4n}][%d] filteredListUnauthorized  %+v", 401, o.Payload)
}

func (o *FilteredListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFilteredListForbidden creates a FilteredListForbidden with default headers values
func NewFilteredListForbidden() *FilteredListForbidden {
	return &FilteredListForbidden{}
}

/*FilteredListForbidden handles this case with default header values.

Forbidden
*/
type FilteredListForbidden struct {
	Payload *api_models.APIError
}

func (o *FilteredListForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/history/{id4n}][%d] filteredListForbidden  %+v", 403, o.Payload)
}

func (o *FilteredListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFilteredListNotFound creates a FilteredListNotFound with default headers values
func NewFilteredListNotFound() *FilteredListNotFound {
	return &FilteredListNotFound{}
}

/*FilteredListNotFound handles this case with default header values.

Not Found
*/
type FilteredListNotFound struct {
	Payload *api_models.APIError
}

func (o *FilteredListNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/history/{id4n}][%d] filteredListNotFound  %+v", 404, o.Payload)
}

func (o *FilteredListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFilteredListMethodNotAllowed creates a FilteredListMethodNotAllowed with default headers values
func NewFilteredListMethodNotAllowed() *FilteredListMethodNotAllowed {
	return &FilteredListMethodNotAllowed{}
}

/*FilteredListMethodNotAllowed handles this case with default header values.

Method not allowed
*/
type FilteredListMethodNotAllowed struct {
	Payload *api_models.APIError
}

func (o *FilteredListMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/v1/history/{id4n}][%d] filteredListMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *FilteredListMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFilteredListNotAcceptable creates a FilteredListNotAcceptable with default headers values
func NewFilteredListNotAcceptable() *FilteredListNotAcceptable {
	return &FilteredListNotAcceptable{}
}

/*FilteredListNotAcceptable handles this case with default header values.

Not Acceptable
*/
type FilteredListNotAcceptable struct {
	Payload *api_models.APIError
}

func (o *FilteredListNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /api/v1/history/{id4n}][%d] filteredListNotAcceptable  %+v", 406, o.Payload)
}

func (o *FilteredListNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFilteredListUnsupportedMediaType creates a FilteredListUnsupportedMediaType with default headers values
func NewFilteredListUnsupportedMediaType() *FilteredListUnsupportedMediaType {
	return &FilteredListUnsupportedMediaType{}
}

/*FilteredListUnsupportedMediaType handles this case with default header values.

Unsupported Media Type
*/
type FilteredListUnsupportedMediaType struct {
	Payload *api_models.APIError
}

func (o *FilteredListUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v1/history/{id4n}][%d] filteredListUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *FilteredListUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFilteredListInternalServerError creates a FilteredListInternalServerError with default headers values
func NewFilteredListInternalServerError() *FilteredListInternalServerError {
	return &FilteredListInternalServerError{}
}

/*FilteredListInternalServerError handles this case with default header values.

Internal Server Error
*/
type FilteredListInternalServerError struct {
	Payload *api_models.APIError
}

func (o *FilteredListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/history/{id4n}][%d] filteredListInternalServerError  %+v", 500, o.Payload)
}

func (o *FilteredListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
