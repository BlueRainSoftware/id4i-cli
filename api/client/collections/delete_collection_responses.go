// Code generated by go-swagger; DO NOT EDIT.

package collections

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	api_models "github.com/BlueRainSoftware/id4i-cli/api/models"
)

// DeleteCollectionReader is a Reader for the DeleteCollection structure.
type DeleteCollectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteCollectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteCollectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteCollectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewDeleteCollectionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteCollectionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteCollectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewDeleteCollectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteCollectionOK creates a DeleteCollectionOK with default headers values
func NewDeleteCollectionOK() *DeleteCollectionOK {
	return &DeleteCollectionOK{}
}

/*DeleteCollectionOK handles this case with default header values.

OK
*/
type DeleteCollectionOK struct {
}

func (o *DeleteCollectionOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/collections/{id4n}][%d] deleteCollectionOK ", 200)
}

func (o *DeleteCollectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteCollectionBadRequest creates a DeleteCollectionBadRequest with default headers values
func NewDeleteCollectionBadRequest() *DeleteCollectionBadRequest {
	return &DeleteCollectionBadRequest{}
}

/*DeleteCollectionBadRequest handles this case with default header values.

Bad Request
*/
type DeleteCollectionBadRequest struct {
	Payload *api_models.APIError
}

func (o *DeleteCollectionBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/collections/{id4n}][%d] deleteCollectionBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteCollectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCollectionUnauthorized creates a DeleteCollectionUnauthorized with default headers values
func NewDeleteCollectionUnauthorized() *DeleteCollectionUnauthorized {
	return &DeleteCollectionUnauthorized{}
}

/*DeleteCollectionUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteCollectionUnauthorized struct {
	Payload *api_models.APIError
}

func (o *DeleteCollectionUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/collections/{id4n}][%d] deleteCollectionUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteCollectionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCollectionForbidden creates a DeleteCollectionForbidden with default headers values
func NewDeleteCollectionForbidden() *DeleteCollectionForbidden {
	return &DeleteCollectionForbidden{}
}

/*DeleteCollectionForbidden handles this case with default header values.

Forbidden
*/
type DeleteCollectionForbidden struct {
	Payload *api_models.APIError
}

func (o *DeleteCollectionForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/collections/{id4n}][%d] deleteCollectionForbidden  %+v", 403, o.Payload)
}

func (o *DeleteCollectionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCollectionNotFound creates a DeleteCollectionNotFound with default headers values
func NewDeleteCollectionNotFound() *DeleteCollectionNotFound {
	return &DeleteCollectionNotFound{}
}

/*DeleteCollectionNotFound handles this case with default header values.

Not Found
*/
type DeleteCollectionNotFound struct {
	Payload *api_models.APIError
}

func (o *DeleteCollectionNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/collections/{id4n}][%d] deleteCollectionNotFound  %+v", 404, o.Payload)
}

func (o *DeleteCollectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCollectionInternalServerError creates a DeleteCollectionInternalServerError with default headers values
func NewDeleteCollectionInternalServerError() *DeleteCollectionInternalServerError {
	return &DeleteCollectionInternalServerError{}
}

/*DeleteCollectionInternalServerError handles this case with default header values.

Internal Server Error
*/
type DeleteCollectionInternalServerError struct {
	Payload *api_models.APIError
}

func (o *DeleteCollectionInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/collections/{id4n}][%d] deleteCollectionInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteCollectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
