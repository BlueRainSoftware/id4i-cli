// Code generated by go-swagger; DO NOT EDIT.

package api_client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/BlueRainSoftware/id4i-cli/api_client/accounts"
	"github.com/BlueRainSoftware/id4i-cli/api_client/alias"
	"github.com/BlueRainSoftware/id4i-cli/api_client/api_keys"
	"github.com/BlueRainSoftware/id4i-cli/api_client/auditing"
	"github.com/BlueRainSoftware/id4i-cli/api_client/billing"
	"github.com/BlueRainSoftware/id4i-cli/api_client/collections"
	"github.com/BlueRainSoftware/id4i-cli/api_client/guids"
	"github.com/BlueRainSoftware/id4i-cli/api_client/history"
	"github.com/BlueRainSoftware/id4i-cli/api_client/meta_information"
	"github.com/BlueRainSoftware/id4i-cli/api_client/operations"
	"github.com/BlueRainSoftware/id4i-cli/api_client/organizations"
	"github.com/BlueRainSoftware/id4i-cli/api_client/public_services"
	"github.com/BlueRainSoftware/id4i-cli/api_client/routing"
	"github.com/BlueRainSoftware/id4i-cli/api_client/storage"
	"github.com/BlueRainSoftware/id4i-cli/api_client/transfer"
)

// Default ID4I HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "backend.id4i.de"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"http"}

// NewHTTPClient creates a new ID4I HTTP client.
func NewHTTPClient(formats strfmt.Registry) *ID4I {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new ID4I HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *ID4I {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new ID4I client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *ID4I {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(ID4I)
	cli.Transport = transport

	cli.Accounts = accounts.New(transport, formats)

	cli.Alias = alias.New(transport, formats)

	cli.APIKeys = api_keys.New(transport, formats)

	cli.Auditing = auditing.New(transport, formats)

	cli.Billing = billing.New(transport, formats)

	cli.Collections = collections.New(transport, formats)

	cli.Guids = guids.New(transport, formats)

	cli.History = history.New(transport, formats)

	cli.MetaInformation = meta_information.New(transport, formats)

	cli.Operations = operations.New(transport, formats)

	cli.Organizations = organizations.New(transport, formats)

	cli.PublicServices = public_services.New(transport, formats)

	cli.Routing = routing.New(transport, formats)

	cli.Storage = storage.New(transport, formats)

	cli.Transfer = transfer.New(transport, formats)

	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// ID4I is a client for ID4I
type ID4I struct {
	Accounts *accounts.Client

	Alias *alias.Client

	APIKeys *api_keys.Client

	Auditing *auditing.Client

	Billing *billing.Client

	Collections *collections.Client

	Guids *guids.Client

	History *history.Client

	MetaInformation *meta_information.Client

	Operations *operations.Client

	Organizations *organizations.Client

	PublicServices *public_services.Client

	Routing *routing.Client

	Storage *storage.Client

	Transfer *transfer.Client

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *ID4I) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport

	c.Accounts.SetTransport(transport)

	c.Alias.SetTransport(transport)

	c.APIKeys.SetTransport(transport)

	c.Auditing.SetTransport(transport)

	c.Billing.SetTransport(transport)

	c.Collections.SetTransport(transport)

	c.Guids.SetTransport(transport)

	c.History.SetTransport(transport)

	c.MetaInformation.SetTransport(transport)

	c.Operations.SetTransport(transport)

	c.Organizations.SetTransport(transport)

	c.PublicServices.SetTransport(transport)

	c.Routing.SetTransport(transport)

	c.Storage.SetTransport(transport)

	c.Transfer.SetTransport(transport)

}
