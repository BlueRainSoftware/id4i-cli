// Code generated by go-swagger; DO NOT EDIT.

package collections

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	api_models "github.com/BlueRainSoftware/id4i-cli/api_models"
)

// CreateCollectionReader is a Reader for the CreateCollection structure.
type CreateCollectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateCollectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCreateCollectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewCreateCollectionCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewCreateCollectionAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateCollectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewCreateCollectionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewCreateCollectionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewCreateCollectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewCreateCollectionMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 406:
		result := NewCreateCollectionNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewCreateCollectionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewCreateCollectionUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewCreateCollectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateCollectionOK creates a CreateCollectionOK with default headers values
func NewCreateCollectionOK() *CreateCollectionOK {
	return &CreateCollectionOK{}
}

/*CreateCollectionOK handles this case with default header values.

OK
*/
type CreateCollectionOK struct {
	Payload *api_models.ID4N
}

func (o *CreateCollectionOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/collections][%d] createCollectionOK  %+v", 200, o.Payload)
}

func (o *CreateCollectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.ID4N)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCollectionCreated creates a CreateCollectionCreated with default headers values
func NewCreateCollectionCreated() *CreateCollectionCreated {
	return &CreateCollectionCreated{}
}

/*CreateCollectionCreated handles this case with default header values.

Created
*/
type CreateCollectionCreated struct {
}

func (o *CreateCollectionCreated) Error() string {
	return fmt.Sprintf("[POST /api/v1/collections][%d] createCollectionCreated ", 201)
}

func (o *CreateCollectionCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateCollectionAccepted creates a CreateCollectionAccepted with default headers values
func NewCreateCollectionAccepted() *CreateCollectionAccepted {
	return &CreateCollectionAccepted{}
}

/*CreateCollectionAccepted handles this case with default header values.

Accepted
*/
type CreateCollectionAccepted struct {
}

func (o *CreateCollectionAccepted) Error() string {
	return fmt.Sprintf("[POST /api/v1/collections][%d] createCollectionAccepted ", 202)
}

func (o *CreateCollectionAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateCollectionBadRequest creates a CreateCollectionBadRequest with default headers values
func NewCreateCollectionBadRequest() *CreateCollectionBadRequest {
	return &CreateCollectionBadRequest{}
}

/*CreateCollectionBadRequest handles this case with default header values.

Bad Request
*/
type CreateCollectionBadRequest struct {
	Payload *api_models.APIError
}

func (o *CreateCollectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1/collections][%d] createCollectionBadRequest  %+v", 400, o.Payload)
}

func (o *CreateCollectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCollectionUnauthorized creates a CreateCollectionUnauthorized with default headers values
func NewCreateCollectionUnauthorized() *CreateCollectionUnauthorized {
	return &CreateCollectionUnauthorized{}
}

/*CreateCollectionUnauthorized handles this case with default header values.

Unauthorized
*/
type CreateCollectionUnauthorized struct {
	Payload *api_models.APIError
}

func (o *CreateCollectionUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v1/collections][%d] createCollectionUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateCollectionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCollectionForbidden creates a CreateCollectionForbidden with default headers values
func NewCreateCollectionForbidden() *CreateCollectionForbidden {
	return &CreateCollectionForbidden{}
}

/*CreateCollectionForbidden handles this case with default header values.

Forbidden
*/
type CreateCollectionForbidden struct {
	Payload *api_models.APIError
}

func (o *CreateCollectionForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/collections][%d] createCollectionForbidden  %+v", 403, o.Payload)
}

func (o *CreateCollectionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCollectionNotFound creates a CreateCollectionNotFound with default headers values
func NewCreateCollectionNotFound() *CreateCollectionNotFound {
	return &CreateCollectionNotFound{}
}

/*CreateCollectionNotFound handles this case with default header values.

Not Found
*/
type CreateCollectionNotFound struct {
	Payload *api_models.APIError
}

func (o *CreateCollectionNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/collections][%d] createCollectionNotFound  %+v", 404, o.Payload)
}

func (o *CreateCollectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCollectionMethodNotAllowed creates a CreateCollectionMethodNotAllowed with default headers values
func NewCreateCollectionMethodNotAllowed() *CreateCollectionMethodNotAllowed {
	return &CreateCollectionMethodNotAllowed{}
}

/*CreateCollectionMethodNotAllowed handles this case with default header values.

Method not allowed
*/
type CreateCollectionMethodNotAllowed struct {
	Payload *api_models.APIError
}

func (o *CreateCollectionMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /api/v1/collections][%d] createCollectionMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *CreateCollectionMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCollectionNotAcceptable creates a CreateCollectionNotAcceptable with default headers values
func NewCreateCollectionNotAcceptable() *CreateCollectionNotAcceptable {
	return &CreateCollectionNotAcceptable{}
}

/*CreateCollectionNotAcceptable handles this case with default header values.

Not Acceptable
*/
type CreateCollectionNotAcceptable struct {
	Payload *api_models.APIError
}

func (o *CreateCollectionNotAcceptable) Error() string {
	return fmt.Sprintf("[POST /api/v1/collections][%d] createCollectionNotAcceptable  %+v", 406, o.Payload)
}

func (o *CreateCollectionNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCollectionConflict creates a CreateCollectionConflict with default headers values
func NewCreateCollectionConflict() *CreateCollectionConflict {
	return &CreateCollectionConflict{}
}

/*CreateCollectionConflict handles this case with default header values.

Conflict
*/
type CreateCollectionConflict struct {
	Payload *api_models.APIError
}

func (o *CreateCollectionConflict) Error() string {
	return fmt.Sprintf("[POST /api/v1/collections][%d] createCollectionConflict  %+v", 409, o.Payload)
}

func (o *CreateCollectionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCollectionUnsupportedMediaType creates a CreateCollectionUnsupportedMediaType with default headers values
func NewCreateCollectionUnsupportedMediaType() *CreateCollectionUnsupportedMediaType {
	return &CreateCollectionUnsupportedMediaType{}
}

/*CreateCollectionUnsupportedMediaType handles this case with default header values.

Unsupported Media Type
*/
type CreateCollectionUnsupportedMediaType struct {
	Payload *api_models.APIError
}

func (o *CreateCollectionUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v1/collections][%d] createCollectionUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *CreateCollectionUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCollectionInternalServerError creates a CreateCollectionInternalServerError with default headers values
func NewCreateCollectionInternalServerError() *CreateCollectionInternalServerError {
	return &CreateCollectionInternalServerError{}
}

/*CreateCollectionInternalServerError handles this case with default header values.

Internal Server Error
*/
type CreateCollectionInternalServerError struct {
	Payload *api_models.APIError
}

func (o *CreateCollectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1/collections][%d] createCollectionInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateCollectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
