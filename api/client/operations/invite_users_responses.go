// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	api_models "github.com/BlueRainSoftware/id4i-cli/api/models"
)

// InviteUsersReader is a Reader for the InviteUsers structure.
type InviteUsersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InviteUsersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewInviteUsersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewInviteUsersCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewInviteUsersAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewInviteUsersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewInviteUsersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewInviteUsersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewInviteUsersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewInviteUsersMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 406:
		result := NewInviteUsersNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewInviteUsersConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewInviteUsersUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewInviteUsersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewInviteUsersOK creates a InviteUsersOK with default headers values
func NewInviteUsersOK() *InviteUsersOK {
	return &InviteUsersOK{}
}

/*InviteUsersOK handles this case with default header values.

OK
*/
type InviteUsersOK struct {
}

func (o *InviteUsersOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/organizations/{organizationId}/users/invite][%d] inviteUsersOK ", 200)
}

func (o *InviteUsersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInviteUsersCreated creates a InviteUsersCreated with default headers values
func NewInviteUsersCreated() *InviteUsersCreated {
	return &InviteUsersCreated{}
}

/*InviteUsersCreated handles this case with default header values.

Created
*/
type InviteUsersCreated struct {
}

func (o *InviteUsersCreated) Error() string {
	return fmt.Sprintf("[POST /api/v1/organizations/{organizationId}/users/invite][%d] inviteUsersCreated ", 201)
}

func (o *InviteUsersCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInviteUsersAccepted creates a InviteUsersAccepted with default headers values
func NewInviteUsersAccepted() *InviteUsersAccepted {
	return &InviteUsersAccepted{}
}

/*InviteUsersAccepted handles this case with default header values.

Accepted
*/
type InviteUsersAccepted struct {
}

func (o *InviteUsersAccepted) Error() string {
	return fmt.Sprintf("[POST /api/v1/organizations/{organizationId}/users/invite][%d] inviteUsersAccepted ", 202)
}

func (o *InviteUsersAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInviteUsersBadRequest creates a InviteUsersBadRequest with default headers values
func NewInviteUsersBadRequest() *InviteUsersBadRequest {
	return &InviteUsersBadRequest{}
}

/*InviteUsersBadRequest handles this case with default header values.

Bad Request
*/
type InviteUsersBadRequest struct {
	Payload *api_models.APIError
}

func (o *InviteUsersBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1/organizations/{organizationId}/users/invite][%d] inviteUsersBadRequest  %+v", 400, o.Payload)
}

func (o *InviteUsersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInviteUsersUnauthorized creates a InviteUsersUnauthorized with default headers values
func NewInviteUsersUnauthorized() *InviteUsersUnauthorized {
	return &InviteUsersUnauthorized{}
}

/*InviteUsersUnauthorized handles this case with default header values.

Unauthorized
*/
type InviteUsersUnauthorized struct {
	Payload *api_models.APIError
}

func (o *InviteUsersUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v1/organizations/{organizationId}/users/invite][%d] inviteUsersUnauthorized  %+v", 401, o.Payload)
}

func (o *InviteUsersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInviteUsersForbidden creates a InviteUsersForbidden with default headers values
func NewInviteUsersForbidden() *InviteUsersForbidden {
	return &InviteUsersForbidden{}
}

/*InviteUsersForbidden handles this case with default header values.

Forbidden
*/
type InviteUsersForbidden struct {
	Payload *api_models.APIError
}

func (o *InviteUsersForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/organizations/{organizationId}/users/invite][%d] inviteUsersForbidden  %+v", 403, o.Payload)
}

func (o *InviteUsersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInviteUsersNotFound creates a InviteUsersNotFound with default headers values
func NewInviteUsersNotFound() *InviteUsersNotFound {
	return &InviteUsersNotFound{}
}

/*InviteUsersNotFound handles this case with default header values.

Not Found
*/
type InviteUsersNotFound struct {
	Payload *api_models.APIError
}

func (o *InviteUsersNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/organizations/{organizationId}/users/invite][%d] inviteUsersNotFound  %+v", 404, o.Payload)
}

func (o *InviteUsersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInviteUsersMethodNotAllowed creates a InviteUsersMethodNotAllowed with default headers values
func NewInviteUsersMethodNotAllowed() *InviteUsersMethodNotAllowed {
	return &InviteUsersMethodNotAllowed{}
}

/*InviteUsersMethodNotAllowed handles this case with default header values.

Method not allowed
*/
type InviteUsersMethodNotAllowed struct {
	Payload *api_models.APIError
}

func (o *InviteUsersMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /api/v1/organizations/{organizationId}/users/invite][%d] inviteUsersMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *InviteUsersMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInviteUsersNotAcceptable creates a InviteUsersNotAcceptable with default headers values
func NewInviteUsersNotAcceptable() *InviteUsersNotAcceptable {
	return &InviteUsersNotAcceptable{}
}

/*InviteUsersNotAcceptable handles this case with default header values.

Not Acceptable
*/
type InviteUsersNotAcceptable struct {
	Payload *api_models.APIError
}

func (o *InviteUsersNotAcceptable) Error() string {
	return fmt.Sprintf("[POST /api/v1/organizations/{organizationId}/users/invite][%d] inviteUsersNotAcceptable  %+v", 406, o.Payload)
}

func (o *InviteUsersNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInviteUsersConflict creates a InviteUsersConflict with default headers values
func NewInviteUsersConflict() *InviteUsersConflict {
	return &InviteUsersConflict{}
}

/*InviteUsersConflict handles this case with default header values.

Conflict
*/
type InviteUsersConflict struct {
	Payload *api_models.APIError
}

func (o *InviteUsersConflict) Error() string {
	return fmt.Sprintf("[POST /api/v1/organizations/{organizationId}/users/invite][%d] inviteUsersConflict  %+v", 409, o.Payload)
}

func (o *InviteUsersConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInviteUsersUnsupportedMediaType creates a InviteUsersUnsupportedMediaType with default headers values
func NewInviteUsersUnsupportedMediaType() *InviteUsersUnsupportedMediaType {
	return &InviteUsersUnsupportedMediaType{}
}

/*InviteUsersUnsupportedMediaType handles this case with default header values.

Unsupported Media Type
*/
type InviteUsersUnsupportedMediaType struct {
	Payload *api_models.APIError
}

func (o *InviteUsersUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v1/organizations/{organizationId}/users/invite][%d] inviteUsersUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *InviteUsersUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInviteUsersInternalServerError creates a InviteUsersInternalServerError with default headers values
func NewInviteUsersInternalServerError() *InviteUsersInternalServerError {
	return &InviteUsersInternalServerError{}
}

/*InviteUsersInternalServerError handles this case with default header values.

Internal Server Error
*/
type InviteUsersInternalServerError struct {
	Payload *api_models.APIError
}

func (o *InviteUsersInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1/organizations/{organizationId}/users/invite][%d] inviteUsersInternalServerError  %+v", 500, o.Payload)
}

func (o *InviteUsersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
