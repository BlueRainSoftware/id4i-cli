// Code generated by go-swagger; DO NOT EDIT.

package history

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewListParams creates a new ListParams object
// with the default values initialized.
func NewListParams() *ListParams {
	var (
		includePrivateDefault = bool(true)
	)
	return &ListParams{
		IncludePrivate: &includePrivateDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewListParamsWithTimeout creates a new ListParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewListParamsWithTimeout(timeout time.Duration) *ListParams {
	var (
		includePrivateDefault = bool(true)
	)
	return &ListParams{
		IncludePrivate: &includePrivateDefault,

		timeout: timeout,
	}
}

// NewListParamsWithContext creates a new ListParams object
// with the default values initialized, and the ability to set a context for a request
func NewListParamsWithContext(ctx context.Context) *ListParams {
	var (
		includePrivateDefault = bool(true)
	)
	return &ListParams{
		IncludePrivate: &includePrivateDefault,

		Context: ctx,
	}
}

// NewListParamsWithHTTPClient creates a new ListParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewListParamsWithHTTPClient(client *http.Client) *ListParams {
	var (
		includePrivateDefault = bool(true)
	)
	return &ListParams{
		IncludePrivate: &includePrivateDefault,
		HTTPClient:     client,
	}
}

/*ListParams contains all the parameters to send to the API endpoint
for the list operation typically these are written to a http.Request
*/
type ListParams struct {

	/*ID4N
	  GUID to retrieve the history for

	*/
	ID4N string
	/*IncludePrivate
	  Also return private history entries

	*/
	IncludePrivate *bool
	/*Limit
	  The maximum count of returned elements

	*/
	Limit *int32
	/*Offset
	  Start with the n-th element

	*/
	Offset *int32
	/*OrganizationID
	  organizationId

	*/
	OrganizationID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the list params
func (o *ListParams) WithTimeout(timeout time.Duration) *ListParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list params
func (o *ListParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list params
func (o *ListParams) WithContext(ctx context.Context) *ListParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list params
func (o *ListParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list params
func (o *ListParams) WithHTTPClient(client *http.Client) *ListParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list params
func (o *ListParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID4N adds the id4n to the list params
func (o *ListParams) WithID4N(id4n string) *ListParams {
	o.SetID4N(id4n)
	return o
}

// SetID4N adds the id4n to the list params
func (o *ListParams) SetID4N(id4n string) {
	o.ID4N = id4n
}

// WithIncludePrivate adds the includePrivate to the list params
func (o *ListParams) WithIncludePrivate(includePrivate *bool) *ListParams {
	o.SetIncludePrivate(includePrivate)
	return o
}

// SetIncludePrivate adds the includePrivate to the list params
func (o *ListParams) SetIncludePrivate(includePrivate *bool) {
	o.IncludePrivate = includePrivate
}

// WithLimit adds the limit to the list params
func (o *ListParams) WithLimit(limit *int32) *ListParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the list params
func (o *ListParams) SetLimit(limit *int32) {
	o.Limit = limit
}

// WithOffset adds the offset to the list params
func (o *ListParams) WithOffset(offset *int32) *ListParams {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the list params
func (o *ListParams) SetOffset(offset *int32) {
	o.Offset = offset
}

// WithOrganizationID adds the organizationID to the list params
func (o *ListParams) WithOrganizationID(organizationID string) *ListParams {
	o.SetOrganizationID(organizationID)
	return o
}

// SetOrganizationID adds the organizationId to the list params
func (o *ListParams) SetOrganizationID(organizationID string) {
	o.OrganizationID = organizationID
}

// WriteToRequest writes these params to a swagger request
func (o *ListParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id4n
	if err := r.SetPathParam("id4n", o.ID4N); err != nil {
		return err
	}

	if o.IncludePrivate != nil {

		// query param includePrivate
		var qrIncludePrivate bool
		if o.IncludePrivate != nil {
			qrIncludePrivate = *o.IncludePrivate
		}
		qIncludePrivate := swag.FormatBool(qrIncludePrivate)
		if qIncludePrivate != "" {
			if err := r.SetQueryParam("includePrivate", qIncludePrivate); err != nil {
				return err
			}
		}

	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int32
		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt32(qrLimit)
		if qLimit != "" {
			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}

	}

	if o.Offset != nil {

		// query param offset
		var qrOffset int32
		if o.Offset != nil {
			qrOffset = *o.Offset
		}
		qOffset := swag.FormatInt32(qrOffset)
		if qOffset != "" {
			if err := r.SetQueryParam("offset", qOffset); err != nil {
				return err
			}
		}

	}

	// path param organizationId
	if err := r.SetPathParam("organizationId", o.OrganizationID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
