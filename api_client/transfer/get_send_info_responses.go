// Code generated by go-swagger; DO NOT EDIT.

package transfer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	api_models "github.com/BlueRainSoftware/id4i-cli/api_models"
)

// GETSendInfoReader is a Reader for the GETSendInfo structure.
type GETSendInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GETSendInfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGETSendInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewGETSendInfoAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGETSendInfoUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGETSendInfoForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGETSendInfoNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewGETSendInfoMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 406:
		result := NewGETSendInfoNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGETSendInfoUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGETSendInfoInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGETSendInfoOK creates a GETSendInfoOK with default headers values
func NewGETSendInfoOK() *GETSendInfoOK {
	return &GETSendInfoOK{}
}

/*GETSendInfoOK handles this case with default header values.

OK
*/
type GETSendInfoOK struct {
	Payload *api_models.TransferSendInfo
}

func (o *GETSendInfoOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/transfers/{id4n}/sendInfo][%d] getSendInfoOK  %+v", 200, o.Payload)
}

func (o *GETSendInfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.TransferSendInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETSendInfoAccepted creates a GETSendInfoAccepted with default headers values
func NewGETSendInfoAccepted() *GETSendInfoAccepted {
	return &GETSendInfoAccepted{}
}

/*GETSendInfoAccepted handles this case with default header values.

Accepted
*/
type GETSendInfoAccepted struct {
}

func (o *GETSendInfoAccepted) Error() string {
	return fmt.Sprintf("[GET /api/v1/transfers/{id4n}/sendInfo][%d] getSendInfoAccepted ", 202)
}

func (o *GETSendInfoAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGETSendInfoUnauthorized creates a GETSendInfoUnauthorized with default headers values
func NewGETSendInfoUnauthorized() *GETSendInfoUnauthorized {
	return &GETSendInfoUnauthorized{}
}

/*GETSendInfoUnauthorized handles this case with default header values.

Unauthorized
*/
type GETSendInfoUnauthorized struct {
	Payload *api_models.APIError
}

func (o *GETSendInfoUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/transfers/{id4n}/sendInfo][%d] getSendInfoUnauthorized  %+v", 401, o.Payload)
}

func (o *GETSendInfoUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETSendInfoForbidden creates a GETSendInfoForbidden with default headers values
func NewGETSendInfoForbidden() *GETSendInfoForbidden {
	return &GETSendInfoForbidden{}
}

/*GETSendInfoForbidden handles this case with default header values.

Forbidden
*/
type GETSendInfoForbidden struct {
	Payload *api_models.APIError
}

func (o *GETSendInfoForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/transfers/{id4n}/sendInfo][%d] getSendInfoForbidden  %+v", 403, o.Payload)
}

func (o *GETSendInfoForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETSendInfoNotFound creates a GETSendInfoNotFound with default headers values
func NewGETSendInfoNotFound() *GETSendInfoNotFound {
	return &GETSendInfoNotFound{}
}

/*GETSendInfoNotFound handles this case with default header values.

Not Found
*/
type GETSendInfoNotFound struct {
	Payload *api_models.APIError
}

func (o *GETSendInfoNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/transfers/{id4n}/sendInfo][%d] getSendInfoNotFound  %+v", 404, o.Payload)
}

func (o *GETSendInfoNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETSendInfoMethodNotAllowed creates a GETSendInfoMethodNotAllowed with default headers values
func NewGETSendInfoMethodNotAllowed() *GETSendInfoMethodNotAllowed {
	return &GETSendInfoMethodNotAllowed{}
}

/*GETSendInfoMethodNotAllowed handles this case with default header values.

Method not allowed
*/
type GETSendInfoMethodNotAllowed struct {
	Payload *api_models.APIError
}

func (o *GETSendInfoMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/v1/transfers/{id4n}/sendInfo][%d] getSendInfoMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *GETSendInfoMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETSendInfoNotAcceptable creates a GETSendInfoNotAcceptable with default headers values
func NewGETSendInfoNotAcceptable() *GETSendInfoNotAcceptable {
	return &GETSendInfoNotAcceptable{}
}

/*GETSendInfoNotAcceptable handles this case with default header values.

Not Acceptable
*/
type GETSendInfoNotAcceptable struct {
	Payload *api_models.APIError
}

func (o *GETSendInfoNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /api/v1/transfers/{id4n}/sendInfo][%d] getSendInfoNotAcceptable  %+v", 406, o.Payload)
}

func (o *GETSendInfoNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETSendInfoUnsupportedMediaType creates a GETSendInfoUnsupportedMediaType with default headers values
func NewGETSendInfoUnsupportedMediaType() *GETSendInfoUnsupportedMediaType {
	return &GETSendInfoUnsupportedMediaType{}
}

/*GETSendInfoUnsupportedMediaType handles this case with default header values.

Unsupported Media Type
*/
type GETSendInfoUnsupportedMediaType struct {
	Payload *api_models.APIError
}

func (o *GETSendInfoUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v1/transfers/{id4n}/sendInfo][%d] getSendInfoUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GETSendInfoUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETSendInfoInternalServerError creates a GETSendInfoInternalServerError with default headers values
func NewGETSendInfoInternalServerError() *GETSendInfoInternalServerError {
	return &GETSendInfoInternalServerError{}
}

/*GETSendInfoInternalServerError handles this case with default header values.

Internal Server Error
*/
type GETSendInfoInternalServerError struct {
	Payload *api_models.APIError
}

func (o *GETSendInfoInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/transfers/{id4n}/sendInfo][%d] getSendInfoInternalServerError  %+v", 500, o.Payload)
}

func (o *GETSendInfoInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
