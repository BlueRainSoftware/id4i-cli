// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	api_models "github.com/BlueRainSoftware/id4i-cli/api_models"
)

// FindOrganizationReader is a Reader for the FindOrganization structure.
type FindOrganizationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FindOrganizationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewFindOrganizationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewFindOrganizationAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewFindOrganizationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewFindOrganizationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewFindOrganizationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewFindOrganizationMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 406:
		result := NewFindOrganizationNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewFindOrganizationUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewFindOrganizationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewFindOrganizationOK creates a FindOrganizationOK with default headers values
func NewFindOrganizationOK() *FindOrganizationOK {
	return &FindOrganizationOK{}
}

/*FindOrganizationOK handles this case with default header values.

OK
*/
type FindOrganizationOK struct {
	Payload *api_models.Organization
}

func (o *FindOrganizationOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/organizations/{organizationId}][%d] findOrganizationOK  %+v", 200, o.Payload)
}

func (o *FindOrganizationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.Organization)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindOrganizationAccepted creates a FindOrganizationAccepted with default headers values
func NewFindOrganizationAccepted() *FindOrganizationAccepted {
	return &FindOrganizationAccepted{}
}

/*FindOrganizationAccepted handles this case with default header values.

Accepted
*/
type FindOrganizationAccepted struct {
}

func (o *FindOrganizationAccepted) Error() string {
	return fmt.Sprintf("[GET /api/v1/organizations/{organizationId}][%d] findOrganizationAccepted ", 202)
}

func (o *FindOrganizationAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindOrganizationUnauthorized creates a FindOrganizationUnauthorized with default headers values
func NewFindOrganizationUnauthorized() *FindOrganizationUnauthorized {
	return &FindOrganizationUnauthorized{}
}

/*FindOrganizationUnauthorized handles this case with default header values.

Unauthorized
*/
type FindOrganizationUnauthorized struct {
	Payload *api_models.APIError
}

func (o *FindOrganizationUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/organizations/{organizationId}][%d] findOrganizationUnauthorized  %+v", 401, o.Payload)
}

func (o *FindOrganizationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindOrganizationForbidden creates a FindOrganizationForbidden with default headers values
func NewFindOrganizationForbidden() *FindOrganizationForbidden {
	return &FindOrganizationForbidden{}
}

/*FindOrganizationForbidden handles this case with default header values.

Forbidden
*/
type FindOrganizationForbidden struct {
	Payload *api_models.APIError
}

func (o *FindOrganizationForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/organizations/{organizationId}][%d] findOrganizationForbidden  %+v", 403, o.Payload)
}

func (o *FindOrganizationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindOrganizationNotFound creates a FindOrganizationNotFound with default headers values
func NewFindOrganizationNotFound() *FindOrganizationNotFound {
	return &FindOrganizationNotFound{}
}

/*FindOrganizationNotFound handles this case with default header values.

Not Found
*/
type FindOrganizationNotFound struct {
	Payload *api_models.APIError
}

func (o *FindOrganizationNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/organizations/{organizationId}][%d] findOrganizationNotFound  %+v", 404, o.Payload)
}

func (o *FindOrganizationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindOrganizationMethodNotAllowed creates a FindOrganizationMethodNotAllowed with default headers values
func NewFindOrganizationMethodNotAllowed() *FindOrganizationMethodNotAllowed {
	return &FindOrganizationMethodNotAllowed{}
}

/*FindOrganizationMethodNotAllowed handles this case with default header values.

Method not allowed
*/
type FindOrganizationMethodNotAllowed struct {
	Payload *api_models.APIError
}

func (o *FindOrganizationMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/v1/organizations/{organizationId}][%d] findOrganizationMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *FindOrganizationMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindOrganizationNotAcceptable creates a FindOrganizationNotAcceptable with default headers values
func NewFindOrganizationNotAcceptable() *FindOrganizationNotAcceptable {
	return &FindOrganizationNotAcceptable{}
}

/*FindOrganizationNotAcceptable handles this case with default header values.

Not Acceptable
*/
type FindOrganizationNotAcceptable struct {
	Payload *api_models.APIError
}

func (o *FindOrganizationNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /api/v1/organizations/{organizationId}][%d] findOrganizationNotAcceptable  %+v", 406, o.Payload)
}

func (o *FindOrganizationNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindOrganizationUnsupportedMediaType creates a FindOrganizationUnsupportedMediaType with default headers values
func NewFindOrganizationUnsupportedMediaType() *FindOrganizationUnsupportedMediaType {
	return &FindOrganizationUnsupportedMediaType{}
}

/*FindOrganizationUnsupportedMediaType handles this case with default header values.

Unsupported Media Type
*/
type FindOrganizationUnsupportedMediaType struct {
	Payload *api_models.APIError
}

func (o *FindOrganizationUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v1/organizations/{organizationId}][%d] findOrganizationUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *FindOrganizationUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindOrganizationInternalServerError creates a FindOrganizationInternalServerError with default headers values
func NewFindOrganizationInternalServerError() *FindOrganizationInternalServerError {
	return &FindOrganizationInternalServerError{}
}

/*FindOrganizationInternalServerError handles this case with default header values.

Internal Server Error
*/
type FindOrganizationInternalServerError struct {
	Payload *api_models.APIError
}

func (o *FindOrganizationInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/organizations/{organizationId}][%d] findOrganizationInternalServerError  %+v", 500, o.Payload)
}

func (o *FindOrganizationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
