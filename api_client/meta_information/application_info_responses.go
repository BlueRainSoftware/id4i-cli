// Code generated by go-swagger; DO NOT EDIT.

package meta_information

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	api_models "github.com/BlueRainSoftware/id4i-cli/api_models"
)

// ApplicationInfoReader is a Reader for the ApplicationInfo structure.
type ApplicationInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ApplicationInfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewApplicationInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewApplicationInfoAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewApplicationInfoUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewApplicationInfoForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewApplicationInfoNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewApplicationInfoMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 406:
		result := NewApplicationInfoNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewApplicationInfoUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewApplicationInfoInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewApplicationInfoOK creates a ApplicationInfoOK with default headers values
func NewApplicationInfoOK() *ApplicationInfoOK {
	return &ApplicationInfoOK{}
}

/*ApplicationInfoOK handles this case with default header values.

OK
*/
type ApplicationInfoOK struct {
	Payload *api_models.AppInfoPresentation
}

func (o *ApplicationInfoOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/info][%d] applicationInfoOK  %+v", 200, o.Payload)
}

func (o *ApplicationInfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.AppInfoPresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewApplicationInfoAccepted creates a ApplicationInfoAccepted with default headers values
func NewApplicationInfoAccepted() *ApplicationInfoAccepted {
	return &ApplicationInfoAccepted{}
}

/*ApplicationInfoAccepted handles this case with default header values.

Accepted
*/
type ApplicationInfoAccepted struct {
}

func (o *ApplicationInfoAccepted) Error() string {
	return fmt.Sprintf("[GET /api/v1/info][%d] applicationInfoAccepted ", 202)
}

func (o *ApplicationInfoAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewApplicationInfoUnauthorized creates a ApplicationInfoUnauthorized with default headers values
func NewApplicationInfoUnauthorized() *ApplicationInfoUnauthorized {
	return &ApplicationInfoUnauthorized{}
}

/*ApplicationInfoUnauthorized handles this case with default header values.

Unauthorized
*/
type ApplicationInfoUnauthorized struct {
	Payload *api_models.APIError
}

func (o *ApplicationInfoUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/info][%d] applicationInfoUnauthorized  %+v", 401, o.Payload)
}

func (o *ApplicationInfoUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewApplicationInfoForbidden creates a ApplicationInfoForbidden with default headers values
func NewApplicationInfoForbidden() *ApplicationInfoForbidden {
	return &ApplicationInfoForbidden{}
}

/*ApplicationInfoForbidden handles this case with default header values.

Forbidden
*/
type ApplicationInfoForbidden struct {
	Payload *api_models.APIError
}

func (o *ApplicationInfoForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/info][%d] applicationInfoForbidden  %+v", 403, o.Payload)
}

func (o *ApplicationInfoForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewApplicationInfoNotFound creates a ApplicationInfoNotFound with default headers values
func NewApplicationInfoNotFound() *ApplicationInfoNotFound {
	return &ApplicationInfoNotFound{}
}

/*ApplicationInfoNotFound handles this case with default header values.

Not Found
*/
type ApplicationInfoNotFound struct {
	Payload *api_models.APIError
}

func (o *ApplicationInfoNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/info][%d] applicationInfoNotFound  %+v", 404, o.Payload)
}

func (o *ApplicationInfoNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewApplicationInfoMethodNotAllowed creates a ApplicationInfoMethodNotAllowed with default headers values
func NewApplicationInfoMethodNotAllowed() *ApplicationInfoMethodNotAllowed {
	return &ApplicationInfoMethodNotAllowed{}
}

/*ApplicationInfoMethodNotAllowed handles this case with default header values.

Method not allowed
*/
type ApplicationInfoMethodNotAllowed struct {
	Payload *api_models.APIError
}

func (o *ApplicationInfoMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/v1/info][%d] applicationInfoMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *ApplicationInfoMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewApplicationInfoNotAcceptable creates a ApplicationInfoNotAcceptable with default headers values
func NewApplicationInfoNotAcceptable() *ApplicationInfoNotAcceptable {
	return &ApplicationInfoNotAcceptable{}
}

/*ApplicationInfoNotAcceptable handles this case with default header values.

Not Acceptable
*/
type ApplicationInfoNotAcceptable struct {
	Payload *api_models.APIError
}

func (o *ApplicationInfoNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /api/v1/info][%d] applicationInfoNotAcceptable  %+v", 406, o.Payload)
}

func (o *ApplicationInfoNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewApplicationInfoUnsupportedMediaType creates a ApplicationInfoUnsupportedMediaType with default headers values
func NewApplicationInfoUnsupportedMediaType() *ApplicationInfoUnsupportedMediaType {
	return &ApplicationInfoUnsupportedMediaType{}
}

/*ApplicationInfoUnsupportedMediaType handles this case with default header values.

Unsupported Media Type
*/
type ApplicationInfoUnsupportedMediaType struct {
	Payload *api_models.APIError
}

func (o *ApplicationInfoUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v1/info][%d] applicationInfoUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *ApplicationInfoUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewApplicationInfoInternalServerError creates a ApplicationInfoInternalServerError with default headers values
func NewApplicationInfoInternalServerError() *ApplicationInfoInternalServerError {
	return &ApplicationInfoInternalServerError{}
}

/*ApplicationInfoInternalServerError handles this case with default header values.

Internal Server Error
*/
type ApplicationInfoInternalServerError struct {
	Payload *api_models.APIError
}

func (o *ApplicationInfoInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/info][%d] applicationInfoInternalServerError  %+v", 500, o.Payload)
}

func (o *ApplicationInfoInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
