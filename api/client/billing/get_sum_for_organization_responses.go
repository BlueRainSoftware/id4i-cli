// Code generated by go-swagger; DO NOT EDIT.

package billing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	api_models "github.com/BlueRainSoftware/id4i-cli/api/models"
)

// GETSumForOrganizationReader is a Reader for the GETSumForOrganization structure.
type GETSumForOrganizationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GETSumForOrganizationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGETSumForOrganizationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewGETSumForOrganizationAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGETSumForOrganizationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGETSumForOrganizationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGETSumForOrganizationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewGETSumForOrganizationMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 406:
		result := NewGETSumForOrganizationNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewGETSumForOrganizationUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGETSumForOrganizationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGETSumForOrganizationOK creates a GETSumForOrganizationOK with default headers values
func NewGETSumForOrganizationOK() *GETSumForOrganizationOK {
	return &GETSumForOrganizationOK{}
}

/*GETSumForOrganizationOK handles this case with default header values.

OK
*/
type GETSumForOrganizationOK struct {
	Payload *api_models.ServiceCosts
}

func (o *GETSumForOrganizationOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/billing/{organizationId}][%d] getSumForOrganizationOK  %+v", 200, o.Payload)
}

func (o *GETSumForOrganizationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.ServiceCosts)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETSumForOrganizationAccepted creates a GETSumForOrganizationAccepted with default headers values
func NewGETSumForOrganizationAccepted() *GETSumForOrganizationAccepted {
	return &GETSumForOrganizationAccepted{}
}

/*GETSumForOrganizationAccepted handles this case with default header values.

Accepted
*/
type GETSumForOrganizationAccepted struct {
}

func (o *GETSumForOrganizationAccepted) Error() string {
	return fmt.Sprintf("[GET /api/v1/billing/{organizationId}][%d] getSumForOrganizationAccepted ", 202)
}

func (o *GETSumForOrganizationAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGETSumForOrganizationUnauthorized creates a GETSumForOrganizationUnauthorized with default headers values
func NewGETSumForOrganizationUnauthorized() *GETSumForOrganizationUnauthorized {
	return &GETSumForOrganizationUnauthorized{}
}

/*GETSumForOrganizationUnauthorized handles this case with default header values.

Unauthorized
*/
type GETSumForOrganizationUnauthorized struct {
	Payload *api_models.APIError
}

func (o *GETSumForOrganizationUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/billing/{organizationId}][%d] getSumForOrganizationUnauthorized  %+v", 401, o.Payload)
}

func (o *GETSumForOrganizationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETSumForOrganizationForbidden creates a GETSumForOrganizationForbidden with default headers values
func NewGETSumForOrganizationForbidden() *GETSumForOrganizationForbidden {
	return &GETSumForOrganizationForbidden{}
}

/*GETSumForOrganizationForbidden handles this case with default header values.

Forbidden
*/
type GETSumForOrganizationForbidden struct {
	Payload *api_models.APIError
}

func (o *GETSumForOrganizationForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/billing/{organizationId}][%d] getSumForOrganizationForbidden  %+v", 403, o.Payload)
}

func (o *GETSumForOrganizationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETSumForOrganizationNotFound creates a GETSumForOrganizationNotFound with default headers values
func NewGETSumForOrganizationNotFound() *GETSumForOrganizationNotFound {
	return &GETSumForOrganizationNotFound{}
}

/*GETSumForOrganizationNotFound handles this case with default header values.

Not Found
*/
type GETSumForOrganizationNotFound struct {
	Payload *api_models.APIError
}

func (o *GETSumForOrganizationNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/billing/{organizationId}][%d] getSumForOrganizationNotFound  %+v", 404, o.Payload)
}

func (o *GETSumForOrganizationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETSumForOrganizationMethodNotAllowed creates a GETSumForOrganizationMethodNotAllowed with default headers values
func NewGETSumForOrganizationMethodNotAllowed() *GETSumForOrganizationMethodNotAllowed {
	return &GETSumForOrganizationMethodNotAllowed{}
}

/*GETSumForOrganizationMethodNotAllowed handles this case with default header values.

Method not allowed
*/
type GETSumForOrganizationMethodNotAllowed struct {
	Payload *api_models.APIError
}

func (o *GETSumForOrganizationMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/v1/billing/{organizationId}][%d] getSumForOrganizationMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *GETSumForOrganizationMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETSumForOrganizationNotAcceptable creates a GETSumForOrganizationNotAcceptable with default headers values
func NewGETSumForOrganizationNotAcceptable() *GETSumForOrganizationNotAcceptable {
	return &GETSumForOrganizationNotAcceptable{}
}

/*GETSumForOrganizationNotAcceptable handles this case with default header values.

Not Acceptable
*/
type GETSumForOrganizationNotAcceptable struct {
	Payload *api_models.APIError
}

func (o *GETSumForOrganizationNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /api/v1/billing/{organizationId}][%d] getSumForOrganizationNotAcceptable  %+v", 406, o.Payload)
}

func (o *GETSumForOrganizationNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETSumForOrganizationUnsupportedMediaType creates a GETSumForOrganizationUnsupportedMediaType with default headers values
func NewGETSumForOrganizationUnsupportedMediaType() *GETSumForOrganizationUnsupportedMediaType {
	return &GETSumForOrganizationUnsupportedMediaType{}
}

/*GETSumForOrganizationUnsupportedMediaType handles this case with default header values.

Unsupported Media Type
*/
type GETSumForOrganizationUnsupportedMediaType struct {
	Payload *api_models.APIError
}

func (o *GETSumForOrganizationUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v1/billing/{organizationId}][%d] getSumForOrganizationUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GETSumForOrganizationUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETSumForOrganizationInternalServerError creates a GETSumForOrganizationInternalServerError with default headers values
func NewGETSumForOrganizationInternalServerError() *GETSumForOrganizationInternalServerError {
	return &GETSumForOrganizationInternalServerError{}
}

/*GETSumForOrganizationInternalServerError handles this case with default header values.

Internal Server Error
*/
type GETSumForOrganizationInternalServerError struct {
	Payload *api_models.APIError
}

func (o *GETSumForOrganizationInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/billing/{organizationId}][%d] getSumForOrganizationInternalServerError  %+v", 500, o.Payload)
}

func (o *GETSumForOrganizationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
