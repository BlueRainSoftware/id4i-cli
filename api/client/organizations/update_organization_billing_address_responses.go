// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	api_models "github.com/BlueRainSoftware/id4i-cli/api/models"
)

// UpdateOrganizationBillingAddressReader is a Reader for the UpdateOrganizationBillingAddress structure.
type UpdateOrganizationBillingAddressReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateOrganizationBillingAddressReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateOrganizationBillingAddressOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewUpdateOrganizationBillingAddressAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUpdateOrganizationBillingAddressBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewUpdateOrganizationBillingAddressUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewUpdateOrganizationBillingAddressForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewUpdateOrganizationBillingAddressNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewUpdateOrganizationBillingAddressMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 406:
		result := NewUpdateOrganizationBillingAddressNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewUpdateOrganizationBillingAddressConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewUpdateOrganizationBillingAddressUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewUpdateOrganizationBillingAddressInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateOrganizationBillingAddressOK creates a UpdateOrganizationBillingAddressOK with default headers values
func NewUpdateOrganizationBillingAddressOK() *UpdateOrganizationBillingAddressOK {
	return &UpdateOrganizationBillingAddressOK{}
}

/*UpdateOrganizationBillingAddressOK handles this case with default header values.

OK
*/
type UpdateOrganizationBillingAddressOK struct {
	Payload *api_models.OrganizationAddress
}

func (o *UpdateOrganizationBillingAddressOK) Error() string {
	return fmt.Sprintf("[PUT /api/v1/organizations/{organizationId}/addresses/billing][%d] updateOrganizationBillingAddressOK  %+v", 200, o.Payload)
}

func (o *UpdateOrganizationBillingAddressOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.OrganizationAddress)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOrganizationBillingAddressAccepted creates a UpdateOrganizationBillingAddressAccepted with default headers values
func NewUpdateOrganizationBillingAddressAccepted() *UpdateOrganizationBillingAddressAccepted {
	return &UpdateOrganizationBillingAddressAccepted{}
}

/*UpdateOrganizationBillingAddressAccepted handles this case with default header values.

Accepted
*/
type UpdateOrganizationBillingAddressAccepted struct {
}

func (o *UpdateOrganizationBillingAddressAccepted) Error() string {
	return fmt.Sprintf("[PUT /api/v1/organizations/{organizationId}/addresses/billing][%d] updateOrganizationBillingAddressAccepted ", 202)
}

func (o *UpdateOrganizationBillingAddressAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateOrganizationBillingAddressBadRequest creates a UpdateOrganizationBillingAddressBadRequest with default headers values
func NewUpdateOrganizationBillingAddressBadRequest() *UpdateOrganizationBillingAddressBadRequest {
	return &UpdateOrganizationBillingAddressBadRequest{}
}

/*UpdateOrganizationBillingAddressBadRequest handles this case with default header values.

Bad Request
*/
type UpdateOrganizationBillingAddressBadRequest struct {
	Payload *api_models.APIError
}

func (o *UpdateOrganizationBillingAddressBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v1/organizations/{organizationId}/addresses/billing][%d] updateOrganizationBillingAddressBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateOrganizationBillingAddressBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOrganizationBillingAddressUnauthorized creates a UpdateOrganizationBillingAddressUnauthorized with default headers values
func NewUpdateOrganizationBillingAddressUnauthorized() *UpdateOrganizationBillingAddressUnauthorized {
	return &UpdateOrganizationBillingAddressUnauthorized{}
}

/*UpdateOrganizationBillingAddressUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateOrganizationBillingAddressUnauthorized struct {
	Payload *api_models.APIError
}

func (o *UpdateOrganizationBillingAddressUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v1/organizations/{organizationId}/addresses/billing][%d] updateOrganizationBillingAddressUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateOrganizationBillingAddressUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOrganizationBillingAddressForbidden creates a UpdateOrganizationBillingAddressForbidden with default headers values
func NewUpdateOrganizationBillingAddressForbidden() *UpdateOrganizationBillingAddressForbidden {
	return &UpdateOrganizationBillingAddressForbidden{}
}

/*UpdateOrganizationBillingAddressForbidden handles this case with default header values.

Forbidden
*/
type UpdateOrganizationBillingAddressForbidden struct {
	Payload *api_models.APIError
}

func (o *UpdateOrganizationBillingAddressForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v1/organizations/{organizationId}/addresses/billing][%d] updateOrganizationBillingAddressForbidden  %+v", 403, o.Payload)
}

func (o *UpdateOrganizationBillingAddressForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOrganizationBillingAddressNotFound creates a UpdateOrganizationBillingAddressNotFound with default headers values
func NewUpdateOrganizationBillingAddressNotFound() *UpdateOrganizationBillingAddressNotFound {
	return &UpdateOrganizationBillingAddressNotFound{}
}

/*UpdateOrganizationBillingAddressNotFound handles this case with default header values.

Not Found
*/
type UpdateOrganizationBillingAddressNotFound struct {
	Payload *api_models.APIError
}

func (o *UpdateOrganizationBillingAddressNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v1/organizations/{organizationId}/addresses/billing][%d] updateOrganizationBillingAddressNotFound  %+v", 404, o.Payload)
}

func (o *UpdateOrganizationBillingAddressNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOrganizationBillingAddressMethodNotAllowed creates a UpdateOrganizationBillingAddressMethodNotAllowed with default headers values
func NewUpdateOrganizationBillingAddressMethodNotAllowed() *UpdateOrganizationBillingAddressMethodNotAllowed {
	return &UpdateOrganizationBillingAddressMethodNotAllowed{}
}

/*UpdateOrganizationBillingAddressMethodNotAllowed handles this case with default header values.

Method not allowed
*/
type UpdateOrganizationBillingAddressMethodNotAllowed struct {
	Payload *api_models.APIError
}

func (o *UpdateOrganizationBillingAddressMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /api/v1/organizations/{organizationId}/addresses/billing][%d] updateOrganizationBillingAddressMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *UpdateOrganizationBillingAddressMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOrganizationBillingAddressNotAcceptable creates a UpdateOrganizationBillingAddressNotAcceptable with default headers values
func NewUpdateOrganizationBillingAddressNotAcceptable() *UpdateOrganizationBillingAddressNotAcceptable {
	return &UpdateOrganizationBillingAddressNotAcceptable{}
}

/*UpdateOrganizationBillingAddressNotAcceptable handles this case with default header values.

Not Acceptable
*/
type UpdateOrganizationBillingAddressNotAcceptable struct {
	Payload *api_models.APIError
}

func (o *UpdateOrganizationBillingAddressNotAcceptable) Error() string {
	return fmt.Sprintf("[PUT /api/v1/organizations/{organizationId}/addresses/billing][%d] updateOrganizationBillingAddressNotAcceptable  %+v", 406, o.Payload)
}

func (o *UpdateOrganizationBillingAddressNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOrganizationBillingAddressConflict creates a UpdateOrganizationBillingAddressConflict with default headers values
func NewUpdateOrganizationBillingAddressConflict() *UpdateOrganizationBillingAddressConflict {
	return &UpdateOrganizationBillingAddressConflict{}
}

/*UpdateOrganizationBillingAddressConflict handles this case with default header values.

Conflict
*/
type UpdateOrganizationBillingAddressConflict struct {
	Payload *api_models.APIError
}

func (o *UpdateOrganizationBillingAddressConflict) Error() string {
	return fmt.Sprintf("[PUT /api/v1/organizations/{organizationId}/addresses/billing][%d] updateOrganizationBillingAddressConflict  %+v", 409, o.Payload)
}

func (o *UpdateOrganizationBillingAddressConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOrganizationBillingAddressUnsupportedMediaType creates a UpdateOrganizationBillingAddressUnsupportedMediaType with default headers values
func NewUpdateOrganizationBillingAddressUnsupportedMediaType() *UpdateOrganizationBillingAddressUnsupportedMediaType {
	return &UpdateOrganizationBillingAddressUnsupportedMediaType{}
}

/*UpdateOrganizationBillingAddressUnsupportedMediaType handles this case with default header values.

Unsupported Media Type
*/
type UpdateOrganizationBillingAddressUnsupportedMediaType struct {
	Payload *api_models.APIError
}

func (o *UpdateOrganizationBillingAddressUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v1/organizations/{organizationId}/addresses/billing][%d] updateOrganizationBillingAddressUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *UpdateOrganizationBillingAddressUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOrganizationBillingAddressInternalServerError creates a UpdateOrganizationBillingAddressInternalServerError with default headers values
func NewUpdateOrganizationBillingAddressInternalServerError() *UpdateOrganizationBillingAddressInternalServerError {
	return &UpdateOrganizationBillingAddressInternalServerError{}
}

/*UpdateOrganizationBillingAddressInternalServerError handles this case with default header values.

Internal Server Error
*/
type UpdateOrganizationBillingAddressInternalServerError struct {
	Payload *api_models.APIError
}

func (o *UpdateOrganizationBillingAddressInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v1/organizations/{organizationId}/addresses/billing][%d] updateOrganizationBillingAddressInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateOrganizationBillingAddressInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(api_models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
