// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewCreateDocumentParams creates a new CreateDocumentParams object
// with the default values initialized.
func NewCreateDocumentParams() *CreateDocumentParams {
	var ()
	return &CreateDocumentParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateDocumentParamsWithTimeout creates a new CreateDocumentParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateDocumentParamsWithTimeout(timeout time.Duration) *CreateDocumentParams {
	var ()
	return &CreateDocumentParams{

		timeout: timeout,
	}
}

// NewCreateDocumentParamsWithContext creates a new CreateDocumentParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateDocumentParamsWithContext(ctx context.Context) *CreateDocumentParams {
	var ()
	return &CreateDocumentParams{

		Context: ctx,
	}
}

// NewCreateDocumentParamsWithHTTPClient creates a new CreateDocumentParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateDocumentParamsWithHTTPClient(client *http.Client) *CreateDocumentParams {
	var ()
	return &CreateDocumentParams{
		HTTPClient: client,
	}
}

/*CreateDocumentParams contains all the parameters to send to the API endpoint
for the create document operation typically these are written to a http.Request
*/
type CreateDocumentParams struct {

	/*Content
	  content

	*/
	Content runtime.NamedReadCloser
	/*ID4N
	  id4n

	*/
	ID4N string
	/*OrganizationID
	  organizationId

	*/
	OrganizationID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create document params
func (o *CreateDocumentParams) WithTimeout(timeout time.Duration) *CreateDocumentParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create document params
func (o *CreateDocumentParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create document params
func (o *CreateDocumentParams) WithContext(ctx context.Context) *CreateDocumentParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create document params
func (o *CreateDocumentParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create document params
func (o *CreateDocumentParams) WithHTTPClient(client *http.Client) *CreateDocumentParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create document params
func (o *CreateDocumentParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithContent adds the content to the create document params
func (o *CreateDocumentParams) WithContent(content runtime.NamedReadCloser) *CreateDocumentParams {
	o.SetContent(content)
	return o
}

// SetContent adds the content to the create document params
func (o *CreateDocumentParams) SetContent(content runtime.NamedReadCloser) {
	o.Content = content
}

// WithID4N adds the id4n to the create document params
func (o *CreateDocumentParams) WithID4N(id4n string) *CreateDocumentParams {
	o.SetID4N(id4n)
	return o
}

// SetID4N adds the id4n to the create document params
func (o *CreateDocumentParams) SetID4N(id4n string) {
	o.ID4N = id4n
}

// WithOrganizationID adds the organizationID to the create document params
func (o *CreateDocumentParams) WithOrganizationID(organizationID string) *CreateDocumentParams {
	o.SetOrganizationID(organizationID)
	return o
}

// SetOrganizationID adds the organizationId to the create document params
func (o *CreateDocumentParams) SetOrganizationID(organizationID string) {
	o.OrganizationID = organizationID
}

// WriteToRequest writes these params to a swagger request
func (o *CreateDocumentParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// form file param content
	if err := r.SetFileParam("content", o.Content); err != nil {
		return err
	}

	// path param id4n
	if err := r.SetPathParam("id4n", o.ID4N); err != nil {
		return err
	}

	// path param organizationId
	if err := r.SetPathParam("organizationId", o.OrganizationID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
